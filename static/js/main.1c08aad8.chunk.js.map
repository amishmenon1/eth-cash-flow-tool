{"version":3,"sources":["images/magnifying-glass-icon.png","components/BlockInput/index.js","global/Status.js","components/Context/TransactionContextProvider.js","global/TableFilter.js","components/TransactionsTable/TableFilterComponent.js","components/TransactionsTable/TableDisplay.js","utils/ethereumUtils.js","global/TableHeaders.js","components/TransactionsTable/TransactionsTable.js","utils/transactionUtils.js","components/Disclaimer/index.js","global/Totals.js","components/TotalsPanel/index.js","components/ConnectWalletButton/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BlockInput","_ref","onSubmit","_ref$fetchDisabled","fetchDisabled","console","log","NUMBERS_PATTERN","_useState","useState","_useState2","Object","slicedToArray","error","setError","startRef","useRef","endRef","numbersOnly","val","test","handleSubmit","e","parseInt","current","value","styles","fetchData","marginBottom","marginTop","requiredField","color","react_default","a","createElement","className","preventDefault","Row","Col","md","htmlFor","style","requiredFieldStyle","id","aria-label","ref","type","onChange","target","placeholder","required","disabled","role","Status","IDLE","PENDING","RESOLVED","REJECTED","FILTERED","TransactionContext","React","createContext","transactionReducer","state","action","status","data","endStatusCallback","toast","warn","position","POSITION","TOP_RIGHT","autoClose","success","Error","concat","TransactionContextProvider","web3State","blockInputs","_useReducer","useReducer","_useReducer2","transactionState","dispatch","Provider","components_TotalsPanel","components_TransactionsTable_TransactionsTable","TableFilter","SENDER","text","RECIPIENT","TableFilterComponent","toggleCallback","filters","filterGroup","toggleFilter","element","classList","contains","toggle","nextSibling","previousSibling","toggleFilterClasses","useEffect","children","ButtonGroup","paddingTop","paddingBottom","justified","size","map","filter","Button","height","fontSize","onClick","key","TableDisplay","headers","_ref$data","tableStyles","maxHeight","overflowY","dataStyles","resultsRow","textAlign","length","Table","striped","bordered","condensed","hover","header","item","hash","address","toString","getEthereumProvider","ethereum","ethers","providers","Web3Provider","walletIsConnected","_callee","_window","connected","accounts","regenerator_default","wrap","_context","prev","next","window","request","method","sent","Boolean","abrupt","t0","stop","connectWallet","_callee2","_window2","provider","_context2","getBlockRange","start","end","Array","from","keys","x","createRange","getBlocks","_callee3","promises","_context3","getBlockNumber","forEach","blockNum","push","getBlock","Promise","all","getTransactionsFromBlocks","blocks","arguments","undefined","hashes","blockResponse","transactions","toConsumableArray","getTxHashesFromBlocks","getTransaction","mapToSenderAddress","tx","mapToRecipientAddress","to","isContractCode","c","getMappedAddresses","txList","mapFunction","constructor","addr","_callee4","addresses","codePromises","_context4","getCode","TableHeaders","SENDER_HEADERS","RECIPIENT_HEADERS","TransactionsTable","startBlock","endBlock","_useContext","useContext","_useContext2","selectedFilter","setSelectedFilter","_useState3","_useState4","tableState","setTableState","_loadTransactionData","apply","this","loadTransactionData","asyncToGenerator","mark","finalStatus","groupedTransactions","txArray","groupByKey","totals","reduce","results","BigNumber","add","groupAndFilterTransactions","getHeaders","Fragment","TransactionsTable_TableFilterComponent","newFilter","loader","variant","tableStyle","noRecordsFound","recordsNotRenderedYet","TransactionsTable_TableDisplay","TableIfExists","Disclaimer","message","Totals","TOTAL_ETH_MOVED","label","TOTAL_NUM_TRANSACTIONS","TOTAL_NUM_CONTRACT_ADDRESSES","TotalsPanel","totalsLoaded","displayData","setDisplayData","wei","values","fromAddresses","toAddresses","totalNumTransactions","totalEthTransferred","d","b","utils","formatEther","getToAddresses","getAddressCodes","then","codes","totalNumContractAddresses","borderColor","border","borderWidth","ConnectWalletButton","connectWalletCb","fontStyle","account","slice","App","setWeb3State","setBlockInputs","_useState5","_useState6","blockInputsDisabled","setBlockInputsDisabled","_handleConnectWallet","_yield$connectWallet","_yield$connectWallet2","_loadWeb3State","loadWeb3State","response","src","logo","alt","lib","components_ConnectWalletButton","borderStyle","components_BlockInput","newStart","newEnd","startBlockChanged","endBlockChanged","components_Disclaimer","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mVCmGzBC,EA/FI,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,SAAqCC,EAAAF,EAA3BG,qBAA2B,IAAAD,KACzDE,QAAQC,IAAI,kCACZ,IAAMC,EAAkB,aAFiCC,EAG/BC,mBAAS,MAHsBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGlDK,EAHkDH,EAAA,GAG3CI,EAH2CJ,EAAA,GAInDK,EAAWC,mBACXC,EAASD,mBAETE,EAAc,SAACC,GAAD,OACjBA,GAAOZ,EAAgBa,KAAKD,GAAO,KAAO,gBAY7C,SAASE,EAAaC,GACpBpB,EAASqB,SAASR,EAASS,QAAQC,OAAQF,SAASN,EAAOO,QAAQC,QAGrE,IAAMC,EAAS,CACbC,UAAW,CACTC,aAAc,OACdC,UAAW,QAGbC,cAAe,CAAEC,MAAO,QAG1B,OACEC,EAAAC,EAAAC,cAAA,QACEC,UAAU,OACVjC,SAAU,SAACoB,GACTA,EAAEc,iBACFf,MAGFW,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACPP,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,oBAAoBL,UAAU,yBAC3CH,EAAAC,EAAAC,cAAA,wBADF,IACqBF,EAAAC,EAAAC,cAAA,KAAGO,MAAOf,EAAOgB,oBAAjB,MAErBV,EAAAC,EAAAC,cAAA,SACES,GAAG,oBACHC,aAAW,cACXC,IAAK9B,EACL+B,KAAK,SACLC,SAzCV,SAA4BzB,GAC1BR,EAASI,EAAYI,EAAE0B,OAAOvB,SAyCtBU,UAAU,+BACVc,YAAY,WACZC,UAAQ,EACRC,UAAU,MAIhBnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACPP,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,kBAAkBL,UAAU,yBACzCH,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,SACES,GAAG,kBACHC,aAAW,YACXC,IAAK5B,EACL6B,KAAK,SACLC,SAvDV,SAA0BzB,GACD,OAAnBA,EAAE0B,OAAOvB,OACXX,EAASI,EAAYI,EAAE0B,OAAOvB,SAsDxBU,UAAU,+BACVc,YAAY,WACZC,UAAU,EACVC,UAAU,MAIhBnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKkB,KAAK,QAAQX,MAAOf,EAAOI,eAC7BjB,IAILmB,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLK,SAAU/C,EACVqC,MAAOf,EAAOC,UACdQ,UAAU,oCAJZ,yBC/ESkB,EARA,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,SAAU,YCECC,EAAqBC,IAAMC,gBAExC,SAASC,EAAmBC,EAAOC,GAEjC,OADA3D,QAAQC,IAAI,8CACJ0D,EAAOlB,MACb,KAAKO,EAAOC,KAEV,OADAjD,QAAQC,IAAI,oDACL,CACL2D,OAAQZ,EAAOC,KACfY,KAAM,KACNrD,MAAO,KACPsD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOE,QAMV,OALAlD,QAAQC,IAAI,uDACZ8D,QAAMC,KAAK,mDAAoD,CAC7DC,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOE,QACfW,KAAM,KACNrD,MAAO,KACPsD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOG,SAMV,OALAnD,QAAQC,IAAI,wDACZ8D,QAAMM,QAAQ,4BAA6B,CACzCJ,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOG,SACfU,KAAMF,EAAOE,KACbrD,MAAO,KACPsD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOI,SASV,OARApD,QAAQC,IACN,uDACA0D,EAAOnD,OAETuD,QAAMvD,MAAM,oBAAsBmD,EAAOnD,MAAO,CAC9CyD,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOI,SACfS,KAAM,KACNrD,MAAOmD,EAAOnD,MACdsD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOK,SACV,MAAO,CACLO,OAAQZ,EAAOK,SACfQ,KAAMF,EAAOE,KACbrD,MAAO,KACPsD,kBAAmBJ,EAAMI,mBAG7B,QAEE,MADA9D,QAAQC,IAAI,wDACN,IAAIqE,MAAJ,0BAAAC,OAAoCZ,EAAOlB,QAKhD,SAAS+B,EAAT5E,GAIJ,IAHD6E,EAGC7E,EAHD6E,UACAC,EAEC9E,EAFD8E,YACAZ,EACClE,EADDkE,kBACCa,EACoCC,qBAAWnB,EAAoB,CAClEI,KAAM,GACND,OAAQZ,EAAOC,KACfa,kBAAmBA,IAJpBe,EAAAvE,OAAAC,EAAA,EAAAD,CAAAqE,EAAA,GACMG,EADND,EAAA,GACwBE,EADxBF,EAAA,GAOD,OACElD,EAAAC,EAAAC,cAACyB,EAAmB0B,SAApB,CAA6B5D,MAAO,CAAC0D,EAAkBC,IACrDpD,EAAAC,EAAAC,cAACoD,GAAD,CAAaR,UAAWA,IACxB9C,EAAAC,EAAAC,cAACqD,EAAD,CACET,UAAWA,EACXC,YAAaA,EACbZ,kBAAmBA,iBCpFZqB,EAXK,CAClBC,OAAQ,CACNC,KAAM,mBACNjE,MAAO,QAETkE,UAAW,CACTD,KAAM,sBACNjE,MAAO,OCHHgE,EAAsBD,EAAtBC,OAAQE,EAAcH,EAAdG,UA2DDC,EAzDc,SAAA3F,GAAwB,IAArB4F,EAAqB5F,EAArB4F,eACxBC,EAAU,CAACL,EAAQE,GACnBI,EAAc/E,mBA0BpB,SAASgF,EAAaC,GACpB,IAAMjD,EAASiD,EAAQjD,QAfzB,SAA6BA,GAM3B,IAIkBiD,EATdjD,EAAOkD,UAAUC,SAAS,iBAI9BnD,EAAOkD,UAAUE,OAAO,iBAKNH,EAJSjD,GAKZqD,YAAcJ,EAAQI,YAAcJ,EAAQK,iBAJnDJ,UAAUE,OAAO,gBASzBG,CAAoBvD,GACpB6C,EAAe7C,EAAOvB,OAGxB,OA/BA+E,oBAAU,WACHT,GAGqBA,EAIiBvE,QAAQiF,SAAS,GAC5CP,UAAUE,OAAO,gBAJhC,CAACL,IA2BF/D,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEjE,MAAO,CAAEkE,WAAY,OAAQC,cAAe,QAC5CC,UAAU,OACVC,KAAK,KACL3E,UAAU,OACVU,IAAKkD,GAEJD,EAAQiB,IAAI,SAACC,GAAD,OACXhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEtE,GAAIqE,EAAOvF,MACXgB,MAAO,CAAEyE,OAAQ,OAAQC,SAAU,WACnCC,QAASpB,EACTvE,MAAOuF,EAAOvF,MACd4F,IAAKL,EAAOvF,OAEXuF,EAAOtB,kBCFH4B,EAnDM,SAAArH,GAA4B,IAAzBsH,EAAyBtH,EAAzBsH,QAAyBC,EAAAvH,EAAhBiE,YAAgB,IAAAsD,EAAT,GAASA,EAC/CnH,QAAQC,IAAI,sCACZ,IAAMmH,EAAc,CAClBC,UAAW,QACXC,UAAW,SACX/F,aAAc,QAEVgG,EAAa,CACjBC,WAAY,CACVC,UAAW,SAuCf,OAnCyB,IAAhB5D,EAAK6D,OACV/F,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACEC,SAAO,EACPC,UAAQ,EACRC,UAAU,OACVC,OAAK,EACL3F,MAAOgF,EACP7E,aAAW,iBAEXZ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGqF,EAAQ9F,MAAMsF,IAAI,SAACsB,GAAD,OACjBrG,EAAAC,EAAAC,cAAA,MAAImF,IAAKgB,GAASA,OAIxBrG,EAAAC,EAAAC,cAAA,aACGgC,EAAK6C,IAAI,SAACuB,GAAD,OACRtG,EAAAC,EAAAC,cAAA,MACEmF,IAAG,OAAAzC,OAAS0D,EAAKC,MACjBpG,UAAU,WACVM,MAAOmF,EAAWC,YAElB7F,EAAAC,EAAAC,cAAA,UAAKoG,EAAKE,SACVxG,EAAAC,EAAAC,cAAA,UAAKoG,EAAK7G,MAAMgH,mCCpChC,SAASC,EAAoBC,GAI3B,OAHKA,IA0DLtI,QAAQgE,KAAK,wBACbD,QAAMC,KAAK,uBAAwB,CACjCC,SAAUF,QAAMG,SAASC,UACzBC,UAAW,OA1DN,IAAImE,IAAOC,UAAUC,aAAaH,YAO5BI,8EAAf,SAAAC,IAAA,IAAAC,EAAAN,EAAAO,EAAAC,EAAA,OAAAC,EAAAnH,EAAAoH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAAAN,EAEyBQ,OAAbd,EAFZM,EAEYN,SAFZ,CAAAW,EAAAE,KAAA,QAKMN,GAAY,EALlBI,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAOuBb,EAASe,QAAQ,CAAEC,OAAQ,iBAPlD,OAOMR,EAPNG,EAAAM,KAQMV,EAAYW,QAAQV,EAASpB,OAAS,GAR5C,eAAAuB,EAAAQ,OAAA,SAUW,CAAEZ,YAAWC,aAVxB,QAAAG,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAYIjJ,QAAQQ,MAARyI,EAAAS,IAZJ,yBAAAT,EAAAU,SAAAhB,EAAA,kDAgBeiB,8EAAf,SAAAC,IAAA,IAAAC,EAAAxB,EAAAQ,EAAAiB,EAAA,OAAAhB,EAAAnH,EAAAoH,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAAAa,EAAAd,KAAA,EAAAY,EAEyBV,OAAbd,EAFZwB,EAEYxB,SAFZ,CAAA0B,EAAAb,KAAA,eAIMnJ,QAAQgE,KAAK,6BAJnBgG,EAAAP,OAAA,wBAAAO,EAAAb,KAAA,EAO2Bb,EAASe,QAAQ,CACtCC,OAAQ,wBARd,cAOUR,EAPVkB,EAAAT,KAUUQ,EAAW,IAAIxB,IAAOC,UAAUC,aAAaH,GAVvD0B,EAAAP,OAAA,SAWW,CAACnB,EAAUyB,EAAUjB,EAAS,KAXzC,QAAAkB,EAAAd,KAAA,GAAAc,EAAAN,GAAAM,EAAA,SAaIhK,QAAQQ,MAARwJ,EAAAN,IAbJ,yBAAAM,EAAAL,SAAAE,EAAA,yCA2BA,SAASI,EAAcC,EAAOC,GAC5B,OALF,SAAqBD,EAAOC,GAC1B,OAAOC,MAAMC,KAAKD,MAAMD,EAAMD,EAAQ,GAAGI,QAAQ5D,IAAI,SAAC6D,GAAD,OAAOA,EAAIL,IAIzDM,CAAYtJ,SAASgJ,GAAQhJ,SAASiJ,aAWhCM,qFAAf,SAAAC,EAAyBR,EAAOC,EAAK1F,EAAWM,GAAhD,IAAAgF,EAAAY,EAAA,OAAA5B,EAAAnH,EAAAoH,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACUY,EAAatF,EAAbsF,SAEHI,GAAe,MAARA,EAHd,CAAAS,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAIgBY,EAASc,iBAJzB,OAIIV,EAJJS,EAAArB,KAKIvJ,QAAQC,IAAR,8BAAAsE,OAA0C4F,IAL9C,cAQQQ,EAAW,GACEV,EAAcC,EAAOC,GAC7BW,QAAQ,SAACC,GAClBJ,EAASK,KAAKjB,EAASkB,SAASF,MAXpCH,EAAAnB,OAAA,SAcSyB,QAAQC,IAAIR,IAdrB,yBAAAC,EAAAjB,SAAAe,6BA4BA,SAASU,IAAkD,IAAxBC,EAAwBC,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAClCvB,GADiDuB,UAAA5D,OAAA,EAAA4D,UAAA,QAAAC,GACjDxB,SACR,GAAKA,EAAL,CAGA,IAAMyB,EAhBR,SAA+BH,GAC7B,IAAIG,EAAS,GAOb,OANAH,EAAOP,QAAQ,SAACW,GACVA,GAAiBA,EAAcC,eACjCF,EAAM,GAAAjH,OAAAjE,OAAAqL,EAAA,EAAArL,CAAOkL,GAAPlL,OAAAqL,EAAA,EAAArL,CAAkBmL,EAAcC,kBAInCF,EAQQI,CAAsBP,GAC/BV,EAAW,GAMjB,OAJAa,EAAOV,QAAQ,SAAC5C,GACdyC,EAASK,KAAKjB,EAAS8B,eAAe3D,MAGjCgD,QAAQC,IAAIR,IAGrB,IAAMmB,EAAqB,SAACC,GAAD,OAAQA,EAAG1B,MAChC2B,EAAwB,SAACD,GAAD,OAAQA,EAAGE,IACnCC,EAAiB,SAACC,GAAD,MAAa,OAANA,GAgB9B,SAASC,EAAmBC,EAAQC,GAOlC,OALID,GAAUA,EAAOE,cAAgBnC,MACvBiC,EAAO3F,IAAI4F,GAAa3F,OAAO,SAAC6F,GAAD,QAAYA,IAE3C,8CAWhB,SAAAC,EAA+BC,EAAWjI,GAA1C,IAAAsF,EAAA4C,EAAA,OAAA5D,EAAAnH,EAAAoH,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,UACUY,EAAatF,EAAbsF,SADV,CAAA6C,EAAAzD,KAAA,eAAAyD,EAAAnD,OAAA,wBAKQkD,EAAe,GACrBD,EAAU5B,QAAQ,SAAC3C,GACjBwE,EAAa3B,KAAKjB,EAAS8C,QAAQ1E,MAPvCyE,EAAAnD,OAAA,SAUSyB,QAAQC,IAAIwB,IAVrB,wBAAAC,EAAAjD,SAAA8C,wCCtJA,IAWeK,EAXM,CACnBC,eAAgB,CACdzK,GAAI,SACJlB,MAAO,CAAC,iBAAkB,qBAE5B4L,kBAAmB,CACjB1K,GAAI,YACJlB,MAAO,CAAC,oBAAqB,0BCMzBgE,EAAsBD,EAAtBC,OAAQE,EAAcH,EAAdG,UACRyH,EAAsCD,EAAtCC,eAAgBC,EAAsBF,EAAtBE,kBA8CxB,IAuGeC,EAvGW,SAAArN,GAAmD,IAAhD6E,EAAgD7E,EAAhD6E,UAAWC,EAAqC9E,EAArC8E,YAAqC9E,EAAxBkE,kBACnD9D,QAAQC,IAAI,0CAD+D,IAEnEiN,EAAyBxI,EAAzBwI,WAAYC,EAAazI,EAAbyI,SAFuDC,EAGtCC,qBAAW/J,GAH2BgK,EAAAhN,OAAAC,EAAA,EAAAD,CAAA8M,EAAA,GAGpEtI,EAHoEwI,EAAA,GAGlDvI,EAHkDuI,EAAA,GAAAnN,EAI/BC,mBAASgF,GAJsB/E,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIpEoN,EAJoElN,EAAA,GAIpDmN,EAJoDnN,EAAA,GAAAoN,EAKvCrN,mBAAS,CAC3CyD,KAAM,GACNqD,QAAS6F,IAPgEW,EAAApN,OAAAC,EAAA,EAAAD,CAAAmN,EAAA,GAKpEE,EALoED,EAAA,GAKxDE,EALwDF,EAAA,GA6F3E,OAhFAvH,oBAAU,WAMR,GALAnG,QAAQC,IACN,4EACA6E,EAAiBlB,QAGdsJ,GAAeK,EAuBpB,OA7Bc,WAAAM,EAAAC,MAAAC,KAAAzC,WA4Bd0C,GACO,WACLhO,QAAQC,IACN,uEA/BU,SAAA4N,IAAA,OAAAA,EAAAvN,OAAA2N,EAAA,EAAA3N,CAAAyI,EAAAnH,EAAAsM,KAad,SAAAvF,IAAA,IAAA0C,EAAAK,EAAAyC,EAAA,OAAApF,EAAAnH,EAAAoH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEpE,EAAS,CACPtC,KAAMO,EAAOE,UAFjB+F,EAAAE,KAAA,EAKuBsB,EAAUyC,EAAYC,EAAU1I,GALvD,cAKQ4G,EALRpC,EAAAM,KAAAN,EAAAE,KAAA,EAM6BiC,EAA0BC,EAAQ5G,GAN/D,OAMQiH,EANRzC,EAAAM,KAOQ4E,EAAezC,EAAiC1I,EAAOG,SAAzBH,EAAOI,SAE3C2B,EAAS,CACPlB,KAAM6H,EACNjJ,KAAM0L,IAXV,wBAAAlF,EAAAU,SAAAhB,OAbcmF,MAAAC,KAAAzC,WAOZtL,QAAQC,IACN,mEA0BH,CAACiN,EAAYC,IAEhBhH,oBAAU,WAIR,GAHAnG,QAAQC,IACN,sEAEE6E,EAAiBlB,SAAWZ,EAAOG,SAAvC,CAOA,IAAMiL,EAkBR,SAAoCvK,EAAM0J,GAIxC,OCtIuBc,EDmIuBxK,ECnIdyK,EDmIoBf,EClIhDgB,EAAS,GACfF,EAAQG,OAAO,SAACC,EAAS1C,GAYvB,OAXK0C,EAAQH,KACXG,EAAQ1C,EAAGuC,IAAe,CACxBlN,MAAOsN,IAAUrE,KAAK,MAGxBoE,EAAQ1C,EAAGuC,IAAX,QAAqCvC,EAAGuC,GAExCG,EAAQ1C,EAAGuC,IAAX,KAAkCvC,EAAE,KACpCwC,EAAOvD,KAAKyD,EAAQ1C,EAAGuC,MAEzBG,EAAQ1C,EAAGuC,IAAalN,MAAQqN,EAAQ1C,EAAGuC,IAAalN,MAAMuN,IAAI5C,EAAG3K,OAC9DqN,GACN,IACIF,GDmH+D5H,OAClE,SAACoF,GAAD,QAAUA,EAAG5D,UCpInB,IAA2BkG,EAASC,EAC5BC,ED+GwBK,CAC1B9J,EAAiBjB,KACjB0J,EAAenM,OAEX8F,EAqBR,SAAoBqG,GAClB,OAAOA,IAAmBnI,EAAOhE,MAAQ2L,EAAiBC,EAtB1C6B,CAAWtB,EAAenM,OAC1CwM,EAAc,CACZ/J,KAAMuK,EACNlH,iBAbAlH,QAAQC,IACN,0EAcH,CAAC6E,EAAiBjB,KAAM0J,IAE3BpH,oBAAU,WACRnG,QAAQC,IAAI,iDACR6E,EAAiBlB,SAAWZ,EAAOG,UACrC2B,EAAiBhB,qBAElB,CAACgB,EAAiBlB,SAkBnBjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkN,SAAA,KACGhK,EAAiBlB,SAAWZ,EAAOG,UAClCxB,EAAAC,EAAAC,cAACkN,EAAD,CAAsBvJ,eAP5B,SAA4BwJ,GAC1BxB,EAAkBwB,IAAc5J,EAAOhE,MAAQgE,EAASE,MAtI5D,SAAuBR,EAAkB6I,GACvC,IAAMsB,EACJtN,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQsI,QAAQ,OAAO5M,GAAG,SAASR,UAAU,eAA7C,cAIIqN,EAAa,CAAE9H,UAAW,QAASC,UAAW,UACpD,OAAQxC,EAAiBlB,QACvB,KAAKZ,EAAOC,KACV,OAAOtB,EAAAC,EAAAC,cAAA,2CACT,KAAKmB,EAAOE,QACV,OAAO+L,EACT,KAAKjM,EAAOI,SACV,MAAM,IAAIkB,MAAM,kDAClB,KAAKtB,EAAOG,SAAZ,IACUU,EAAkB8J,EAAlB9J,KAAMqD,EAAYyG,EAAZzG,QACRkI,EAAkD,IAAjCtK,EAAiBjB,KAAK6D,OACvC2H,EACJvK,EAAiBjB,KAAK6D,OAAS,GAAqB,IAAhB7D,EAAK6D,OAa3C,OAXI0H,EACQzN,EAAAC,EAAAC,cAAA,gCACDwN,EACCJ,EAGRtN,EAAAC,EAAAC,cAAA,OAAKO,MAAO+M,GACVxN,EAAAC,EAAAC,cAACyN,EAAD,CAAcpI,QAASA,EAASrD,KAAMA,KAK9C,KAAKb,EAAOK,SACV,OACE1B,EAAAC,EAAAC,cAAA,OAAKO,MAAO+M,GACVxN,EAAAC,EAAAC,cAACyN,EAAD,CAAcpI,QAASA,EAASrD,KAAMA,KAI5C,QACE,MAAM,IAAIS,MAAM,8BAsGfiL,CAAczK,EAAkB6I,KEhJxB6B,EAXI,SAAA5P,GAAiB,IAAd6P,EAAc7P,EAAd6P,QACpB,OACE9N,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,cACAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,SAAI4N,MCIGC,EAZA,CACbC,gBAAiB,CACfC,MAAO,iCAETC,uBAAwB,CACtBD,MAAO,wBAETE,6BAA8B,CAC5BF,MAAO,+BCmGIG,GA/FK,SAAAnQ,GAAmB,IAAhB6E,EAAgB7E,EAAhB6E,UAAgB2I,EACVC,qBAAW/J,GAA/BwB,EAD8BxE,OAAAC,EAAA,EAAAD,CAAA8M,EAAA,MAAAjN,EAECC,mBAAS,CAC7CyD,KAAM,GACNmM,cAAc,IAJqB3P,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE9B8P,EAF8B5P,EAAA,GAEjB6P,EAFiB7P,EAAA,GA+ErC,OAhEA8F,oBAAU,WAIR,GAHAnG,QAAQC,IACN,oEAEG6E,EAAiBjB,MAAyC,IAAjCiB,EAAiBjB,KAAK6D,OAApD,CAOA,INnCayI,EMoEPC,EAYEvM,EACFwM,EACAC,ENmCgBjE,EMlFhBkE,EAAuBzL,EAAiBjB,KAAK6D,OAC7C8I,GAgCAJ,EADWtL,EAATjB,KACY6C,IAAI,SAAC+J,GAAD,OAAOA,EAAErP,QNpEpB+O,GMsEXC,EAAO1I,OAAS,EACZ0I,EAAO5B,OAAO,SAAC5M,EAAG8O,GAAJ,OAAU9O,EAAE+M,IAAI+B,KAC9BhC,IAAUrE,KAAK,MAEKjC,WNzErBG,IAAOoI,MAAMC,YAAYT,EAAK,UM2DnC,OAoBQtM,EAASiB,EAATjB,KNqCcwI,EMpCiBxI,EAAjCwM,ENqCDjE,EAAmBC,EAAQP,GMpC1BwE,ENuCV,SAAwBjE,GACtB,OAAOD,EAAmBC,EAAQL,GMxCZ6E,CAAehN,gDAG5BiN,CAFQ,GAAAvM,OAAAjE,OAAAqL,EAAA,EAAArL,CAAO+P,GAAP/P,OAAAqL,EAAA,EAAArL,CAAyBgQ,IAEN7L,IA/CHsM,KAAK,SAACC,GACnC,IACMC,EADoBD,EAAMrK,OAAOuF,GACaxE,OACpDwI,EAAe,CACbrM,KAAM,CACJ,CACE+L,MAAOF,EAAOC,gBAAgBC,MAC9BxO,MAAOoP,GAET,CACEZ,MAAOF,EAAOG,uBAAuBD,MACrCxO,MAAOmP,GAET,CACEX,MAAOF,EAAOI,6BAA6BF,MAC3CxO,MAAO6P,IAGXjB,cAAc,MAIX,WACLhQ,QAAQC,IAAI,2DACZiQ,EAAe,CAAEF,cAAc,KAjC/BhQ,QAAQC,IACN,wEAkCH,CAAC6E,IAyBFmL,EAAYD,cACVrO,EAAAC,EAAAC,cAAA,OAAKO,MAzEC,CACN8O,YAAa,WACbC,OAAQ,SACRC,YAAa,UAuEVnB,EAAYpM,KAAK6C,IAAI,SAAC7C,GACrB,OACElC,EAAAC,EAAAC,cAAA,KAAGmF,IAAKnD,EAAK+L,OACXjO,EAAAC,EAAAC,cAAA,cAASgC,EAAK+L,MAAd,MACC/L,EAAKzC,WCzELiQ,GAtBa,SAAAzR,GAAoC,IAAjC6E,EAAiC7E,EAAjC6E,UAAW6M,EAAsB1R,EAAtB0R,gBAOxC,OAAQ7M,EAAUoE,UAOhBlH,EAAAC,EAAAC,cAAA,OAAKO,MAZM,CACTmP,UAAW,WAYV,IADH,qBAEqB9M,EAAU+M,QAAQC,MAAM,EAAG,GAFhD,MAGGhN,EAAU+M,QAAQC,OAAO,IAT5B9P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkN,SAAA,KACEnN,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQG,QAASuK,EAAiBpC,QAAQ,WAA1C,oBCuHSwC,GApHH,WACV1R,QAAQC,IAAI,2BADI,IAAAE,EAEkBC,mBAAS,CACzCkI,SAAU,KACVkJ,QAAS,KACTzH,SAAU,KACVlB,WAAW,IANGxI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAETsE,EAFSpE,EAAA,GAEEsR,EAFFtR,EAAA,GAAAoN,EASsBrN,mBAAS,CAC7C8M,WAAY,KACZC,SAAU,OAXIO,EAAApN,OAAAC,EAAA,EAAAD,CAAAmN,EAAA,GAST/I,EATSgJ,EAAA,GASIkE,EATJlE,EAAA,GAAAmE,EAcsCzR,oBAAS,GAd/C0R,EAAAxR,OAAAC,EAAA,EAAAD,CAAAuR,EAAA,GAcTE,EAdSD,EAAA,GAcYE,EAdZF,EAAA,YAAAG,IAAA,OAAAA,EAAA3R,OAAA2N,EAAA,EAAA3N,CAAAyI,EAAAnH,EAAAsM,KA2ChB,SAAArE,IAAA,IAAAqI,EAAAC,EAAA7J,EAAAyB,EAAAyH,EAAA,OAAAzI,EAAAnH,EAAAoH,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAC8CS,EAAc+H,GAD5D,OAAAO,EAAAlI,EAAAT,KAAA4I,EAAA7R,OAAAC,EAAA,EAAAD,CAAA4R,EAAA,GACS5J,EADT6J,EAAA,GACmBpI,EADnBoI,EAAA,GAC6BX,EAD7BW,EAAA,GAEER,EAAa,CAAErJ,WAAUyB,WAAUyH,UAAS3I,WAAW,IAFzD,wBAAAmB,EAAAL,SAAAE,OA3CgBiE,MAAAC,KAAAzC,WAgBhBnF,oBAAU,WACRnG,QAAQC,IAAI,iCADE,IAENqI,EAAac,OAAbd,SACFyB,EAAW1B,EAAoBC,GAHvB,SAAA8J,IAAA,OAAAA,EAAA9R,OAAA2N,EAAA,EAAA3N,CAAAyI,EAAAnH,EAAAsM,KAId,SAAAvF,IAAA,OAAAI,EAAAnH,EAAAoH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAQ,OAAA,SACSf,KADT,wBAAAO,EAAAU,SAAAhB,OAJcmF,MAAAC,KAAAzC,YAAA,kBAAA8G,EAAAtE,MAAAC,KAAAzC,YAOd+G,GAAgBtB,KAAK,SAACuB,GAAa,IACzBzJ,EAAwByJ,EAAxBzJ,UAAWC,EAAawJ,EAAbxJ,SAEnB,GADAkJ,GAAwBnJ,GACnBA,GAAcC,EAAnB,CAGA,IAAM0I,EAAU3I,EAAYC,EAAS,GAAK,KAC1C6I,EAAa,CACXrJ,WACAyB,WACAyH,UACA3I,kBAGH,IAEH1C,oBAAU,WACR6L,GAAwBvN,EAAUoE,YACjC,CAACpE,EAAUoE,YA4Bd,OACElH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAK0Q,IAAKC,IAAM1Q,UAAU,WAAW2Q,IAAI,SACzC9Q,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBAEFH,EAAAC,EAAAC,cAAC6Q,EAAA,eAAD,MACA/Q,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACPP,EAAAC,EAAAC,cAAC8Q,GAAD,CACElO,UAAWA,EACX6M,gBAlFM,kBAAAW,EAAAnE,MAAAC,KAAAzC,gBAsFZ3J,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGE,MAxBJ,CACVwQ,YAAa,WAwBTjR,EAAAC,EAAAC,cAACgR,EAAD,CACEhT,SA1CV,SAA4BiT,EAAUC,GACpC,IAAMC,EAAoBF,IAAapO,EAAYwI,WAC7C+F,EAAkBF,IAAWrO,EAAYyI,UAC3C6F,GAAqBC,IACvBjB,GAAuB,GAGzBJ,EAAe,CAAE1E,WAAY4F,EAAU3F,SAAU4F,KAoCzChT,cAAegS,KAGnBpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KAEXP,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACPP,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,UAAWA,EACXC,YAAaA,EACbZ,kBAAmB,kBAAMkO,GAAuB,OAGpDrQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KAEXP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaM,MAAO,CAAEZ,UAAW,SACjDG,EAAAC,EAAAC,cAACqR,EAAD,CAAYzD,QAnDP,uHChEP0D,GAAc3J,QACW,cAA7BJ,OAAOgK,SAASC,UAEe,UAA7BjK,OAAOgK,SAASC,UAEhBjK,OAAOgK,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzC,KAAK,SAAA6C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpQ,QACf+P,UAAUC,cAAcO,WAK1BjU,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBiU,MAAM,SAAA1T,GACLR,QAAQQ,MAAM,4CAA6CA,KCzEjE2T,IAASC,OAAOzS,EAAAC,EAAAC,cAACwS,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,sBAAwBrL,OAAOgK,UAC3CsB,SAAWtL,OAAOgK,SAASsB,OAIvC,OAGFtL,OAAOuL,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAjP,OAAMkQ,sBAAN,sBAEPtB,IAiDV,SAAiCK,GAE/BoB,MAAMpB,GACHzC,KAAK,SAAAuB,GAGkB,MAApBA,EAAS1O,SACuD,IAAhE0O,EAASpL,QAAQ2N,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMhE,KAAK,SAAA6C,GACjCA,EAAaoB,aAAajE,KAAK,WAC7B3H,OAAOgK,SAAS6B,aAKpB1B,GAAgBC,KAGnBU,MAAM,WACLlU,QAAQC,IACN,mEArEAiV,CAAwB1B,GAIxBC,UAAUC,cAAcqB,MAAMhE,KAAK,WACjC/Q,QAAQC,IACN,+GAMJsT,GAAgBC,MCzCxB2B","file":"static/js/main.1c08aad8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass-icon.27e342e7.png\";","import React, { useState, useRef } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nconst BlockInput = ({ onSubmit, fetchDisabled = true }) => {\n  console.log(\"BlockInput component -- render\");\n  const NUMBERS_PATTERN = /^[0-9\\b]+$/;\n  const [error, setError] = useState(null);\n  const startRef = useRef();\n  const endRef = useRef();\n\n  const numbersOnly = (val) =>\n    !val || NUMBERS_PATTERN.test(val) ? null : \"Numbers only\";\n\n  function onStartBlockChange(e) {\n    setError(numbersOnly(e.target.value));\n  }\n\n  function onEndBlockChange(e) {\n    if (e.target.value !== null) {\n      setError(numbersOnly(e.target.value));\n    }\n  }\n\n  function handleSubmit(e) {\n    onSubmit(parseInt(startRef.current.value), parseInt(endRef.current.value));\n  }\n\n  const styles = {\n    fetchData: {\n      marginBottom: \"10px\",\n      marginTop: \"10px\",\n    },\n\n    requiredField: { color: \"red\" },\n  };\n\n  return (\n    <form\n      className=\"mb-3\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit(e);\n      }}\n    >\n      <Row>\n        <Col md={12}>\n          <label htmlFor=\"start-block-input\" className=\"float-left text-muted\">\n            <b>Start Block</b> <b style={styles.requiredFieldStyle}>*</b>\n          </label>\n          <input\n            id=\"start-block-input\"\n            aria-label=\"Start Block\"\n            ref={startRef}\n            type=\"number\"\n            onChange={onStartBlockChange}\n            className=\"form-control form-control-lg\"\n            placeholder=\"10305800\"\n            required\n            disabled={false}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={12}>\n          <label htmlFor=\"end-block-input\" className=\"float-left text-muted\">\n            <b>End Block (Optional)</b>\n          </label>\n          <input\n            id=\"end-block-input\"\n            aria-label=\"End Block\"\n            ref={endRef}\n            type=\"number\"\n            onChange={onEndBlockChange}\n            className=\"form-control form-control-lg\"\n            placeholder=\"10305827\"\n            required={false}\n            disabled={false}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <div role=\"alert\" style={styles.requiredField}>\n          {error}\n        </div>\n      </Row>\n\n      <button\n        type=\"submit\"\n        disabled={fetchDisabled}\n        style={styles.fetchData}\n        className=\"btn btn-primary btn-block btn-lg\"\n      >\n        Fetch Data!\n      </button>\n    </form>\n  );\n};\n\nexport default BlockInput;\n","const Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n  FILTERED: \"filtered\",\n};\n\nexport default Status;\n","import React, { useReducer } from \"react\";\nimport { TransactionsTable } from \"../\";\nimport { TotalsPanel } from \"../\";\nimport { toast } from \"react-toastify\";\n\nimport Status from \"../../global/Status\";\n\nexport const TransactionContext = React.createContext();\n\nfunction transactionReducer(state, action) {\n  console.log(\"TxContextProvider --- TxReducer --- render\");\n  switch (action.type) {\n    case Status.IDLE: {\n      console.log(\"TxContextProvider --- TxReducer --- status: idle\");\n      return {\n        status: Status.IDLE,\n        data: null,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.PENDING: {\n      console.log(\"TxContextProvider --- TxReducer --- status: pending\");\n      toast.warn(\"Loading all data. This could take a few minutes.\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        status: Status.PENDING,\n        data: null,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.RESOLVED: {\n      console.log(\"TxContextProvider --- TxReducer --- status: resolved\");\n      toast.success(\"Data successfully loaded.\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        status: Status.RESOLVED,\n        data: action.data,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.REJECTED: {\n      console.log(\n        \"TxContextProvider --- TxReducer --- status: rejected\",\n        action.error\n      );\n      toast.error(\"Failed to fetch: \" + action.error, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 10000,\n      });\n      return {\n        status: Status.REJECTED,\n        data: null,\n        error: action.error,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.FILTERED: {\n      return {\n        status: Status.FILTERED,\n        data: action.data,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    default: {\n      console.log(\"TxContextProvider --- TxReducer --- should not occur\");\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nexport function TransactionContextProvider({\n  web3State,\n  blockInputs,\n  endStatusCallback,\n}) {\n  const [transactionState, dispatch] = useReducer(transactionReducer, {\n    data: [],\n    status: Status.IDLE,\n    endStatusCallback: endStatusCallback,\n  });\n\n  return (\n    <TransactionContext.Provider value={[transactionState, dispatch]}>\n      <TotalsPanel web3State={web3State} />\n      <TransactionsTable\n        web3State={web3State}\n        blockInputs={blockInputs}\n        endStatusCallback={endStatusCallback}\n      />\n    </TransactionContext.Provider>\n  );\n}\n","const TableFilter = {\n  SENDER: {\n    text: \"Totals by Sender\",\n    value: \"from\",\n  },\n  RECIPIENT: {\n    text: \"Totals by Recipient\",\n    value: \"to\",\n  },\n};\n\nexport default TableFilter;\n","import React, { useEffect, useRef } from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport TableFilter from \"../../global/TableFilter\";\n\nconst { SENDER, RECIPIENT } = TableFilter;\n\nconst TableFilterComponent = ({ toggleCallback }) => {\n  const filters = [SENDER, RECIPIENT];\n  const filterGroup = useRef();\n  useEffect(() => {\n    if (!filterGroup) {\n      return;\n    }\n    setDefaultFilterSelection(filterGroup);\n  }, [filterGroup]);\n\n  function setDefaultFilterSelection(filterGroupElement) {\n    const recipientFilter = filterGroupElement.current.children[1];\n    recipientFilter.classList.toggle(\"btn-primary\");\n  }\n  function toggleFilterClasses(target) {\n    if (target.classList.contains(\"btn-primary\")) {\n      // button has already been selected - do nothing\n      return;\n    }\n    target.classList.toggle(\"btn-primary\");\n    const sibling = getSibling(target);\n    sibling.classList.toggle(\"btn-primary\");\n  }\n\n  function getSibling(element) {\n    return element.nextSibling ? element.nextSibling : element.previousSibling;\n  }\n\n  function toggleFilter(element) {\n    const target = element.target;\n    toggleFilterClasses(target);\n    toggleCallback(target.value);\n  }\n\n  return (\n    <ButtonGroup\n      style={{ paddingTop: \"10px\", paddingBottom: \"20px\" }}\n      justified=\"true\"\n      size=\"lg\"\n      className=\"mb-2\"\n      ref={filterGroup}\n    >\n      {filters.map((filter) => (\n        <Button\n          id={filter.value}\n          style={{ height: \"35px\", fontSize: \"inherit\" }}\n          onClick={toggleFilter}\n          value={filter.value}\n          key={filter.value}\n        >\n          {filter.text}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n};\n\nexport default TableFilterComponent;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst TableDisplay = ({ headers, data = [] }) => {\n  console.log(\"TableDisplay component ---- render\");\n  const tableStyles = {\n    maxHeight: \"400px\",\n    overflowY: \"scroll\",\n    marginBottom: \"20px\",\n  };\n  const dataStyles = {\n    resultsRow: {\n      textAlign: \"left\",\n    },\n  };\n  const tableContent = () => {\n    return data.length === 0 ? (\n      <strong>No Records Found.</strong>\n    ) : (\n      <div>\n        <Table\n          striped\n          bordered\n          condensed=\"true\"\n          hover\n          style={tableStyles}\n          aria-label=\"Table Display\"\n        >\n          <thead>\n            <tr>\n              {headers.value.map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((item) => (\n              <tr\n                key={`row-${item.hash}`}\n                className=\"tableRow\"\n                style={dataStyles.resultsRow}\n              >\n                <td>{item.address}</td>\n                <td>{item.value.toString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  };\n  return tableContent();\n};\n\nexport default TableDisplay;\n","import { ethers } from \"ethers\";\nimport { toast } from \"react-toastify\";\n\nfunction toEther(wei) {\n  return ethers.utils.formatEther(wei, \"Ether\");\n}\n\nfunction getEthereumProvider(ethereum) {\n  if (!ethereum) {\n    logNoWalletFound();\n  }\n  return new ethers.providers.Web3Provider(ethereum);\n}\nfunction getSigner(provider) {\n  const signer = provider.getSigner();\n  return [provider, signer];\n}\n\nasync function walletIsConnected() {\n  try {\n    const { ethereum } = window;\n    let connected, accounts;\n    if (!ethereum) {\n      connected = false;\n    } else {\n      accounts = await ethereum.request({ method: \"eth_accounts\" });\n      connected = Boolean(accounts.length > 0);\n    }\n    return { connected, accounts };\n  } catch (error) {\n    console.error(error);\n  }\n}\n// TODO: multiple wallet extensions? open only 1\nasync function connectWallet() {\n  try {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.warn(\"ethereum object not found\");\n      return;\n    }\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    return [ethereum, provider, accounts[0]];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n *\n * @param {number} start start block number\n * @param {number} end end block number\n * @returns range from start to end values\n */\nfunction createRange(start, end) {\n  return Array.from(Array(end - start + 1).keys()).map((x) => x + start);\n}\n\nfunction getBlockRange(start, end) {\n  return createRange(parseInt(start), parseInt(end));\n}\n\nfunction logNoWalletFound() {\n  console.warn(\"Wallet not detected.\");\n  toast.warn(\"Wallet not detected.\", {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 5000,\n  });\n}\n\nasync function getBlocks(start, end, web3State, dispatch) {\n  const { provider } = web3State;\n\n  if (!end || end === \"0\") {\n    end = await provider.getBlockNumber();\n    console.log(`using latest block number: ${end}`);\n  }\n\n  const promises = [];\n  const blockRange = getBlockRange(start, end);\n  blockRange.forEach((blockNum) => {\n    promises.push(provider.getBlock(blockNum));\n  });\n\n  return Promise.all(promises);\n}\n\nfunction getTxHashesFromBlocks(blocks) {\n  let hashes = [];\n  blocks.forEach((blockResponse) => {\n    if (blockResponse && blockResponse.transactions) {\n      hashes = [...hashes, ...blockResponse.transactions];\n    }\n  });\n\n  return hashes;\n}\n\nfunction getTransactionsFromBlocks(blocks = [], web3State) {\n  const { provider } = web3State;\n  if (!provider) {\n    return;\n  }\n  const hashes = getTxHashesFromBlocks(blocks);\n  const promises = [];\n\n  hashes.forEach((hash) => {\n    promises.push(provider.getTransaction(hash));\n  });\n\n  return Promise.all(promises);\n}\n\nconst mapToSenderAddress = (tx) => tx.from;\nconst mapToRecipientAddress = (tx) => tx.to;\nconst isContractCode = (c) => c === \"0x\";\n\nfunction getFromAddresses(txList) {\n  return getMappedAddresses(txList, mapToSenderAddress);\n}\n\nfunction getToAddresses(txList) {\n  return getMappedAddresses(txList, mapToRecipientAddress);\n}\n\n/**\n *\n * @param {Array} txList the list of transactions\n * @param {function} mapFunction the map function\n * @returns mapped list of addresses\n */\nfunction getMappedAddresses(txList, mapFunction) {\n  let addresses;\n  if (txList && txList.constructor === Array) {\n    addresses = txList.map(mapFunction).filter((addr) => !!addr);\n  } else {\n    addresses = [];\n  }\n  return addresses;\n}\n\n/**\n *\n * @param {Array} addresses\n * for each address, check the code to see if its a contract\n * @returns codes\n */\nasync function getAddressCodes(addresses, web3State) {\n  const { provider } = web3State;\n  if (!provider) {\n    return;\n  }\n  const codePromises = [];\n  addresses.forEach((address) => {\n    codePromises.push(provider.getCode(address));\n  });\n\n  return Promise.all(codePromises);\n}\n\nexport {\n  getEthereumProvider,\n  getSigner,\n  connectWallet,\n  getBlocks,\n  walletIsConnected,\n  getTransactionsFromBlocks,\n  getAddressCodes,\n  isContractCode,\n  getFromAddresses,\n  getToAddresses,\n  toEther,\n};\n","const TableHeaders = {\n  SENDER_HEADERS: {\n    id: \"SENDER\",\n    value: [\"Sender Address\", \"Total Sent (Wei)\"],\n  },\n  RECIPIENT_HEADERS: {\n    id: \"RECIPIENT\",\n    value: [\"Recipient Address\", \"Total Received (Wei)\"],\n  },\n};\n\nexport default TableHeaders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { TransactionContext } from \"../Context/TransactionContextProvider\";\nimport { TableFilterComponent, TableDisplay } from \"./\";\nimport {\n  getBlocks,\n  getTransactionsFromBlocks,\n} from \"../../utils/ethereumUtils\";\nimport { groupTransactions } from \"../../utils/transactionUtils\";\nimport Status from \"../../global/Status\";\nimport TableFilter from \"../../global/TableFilter\";\nimport TableHeaders from \"../../global/TableHeaders\";\n\nconst { SENDER, RECIPIENT } = TableFilter;\nconst { SENDER_HEADERS, RECIPIENT_HEADERS } = TableHeaders;\n\nfunction TableIfExists(transactionState, tableState) {\n  const loader = (\n    <Button variant=\"link\" id=\"loader\" className=\"text-center\">\n      Loading...\n    </Button>\n  );\n  const tableStyle = { maxHeight: \"400px\", overflowY: \"scroll\" };\n  switch (transactionState.status) {\n    case Status.IDLE:\n      return <div>*** Submit a block range ***</div>;\n    case Status.PENDING:\n      return loader;\n    case Status.REJECTED:\n      throw new Error(\"Something went wrong. Please check connection.\");\n    case Status.RESOLVED:\n      const { data, headers } = tableState;\n      const noRecordsFound = transactionState.data.length === 0;\n      const recordsNotRenderedYet =\n        transactionState.data.length > 0 && data.length === 0;\n      let display;\n      if (noRecordsFound) {\n        display = <div>No Records Found.</div>;\n      } else if (recordsNotRenderedYet) {\n        display = loader;\n      } else {\n        display = (\n          <div style={tableStyle}>\n            <TableDisplay headers={headers} data={data} />\n          </div>\n        );\n      }\n      return display;\n    case Status.FILTERED: {\n      return (\n        <div style={tableStyle}>\n          <TableDisplay headers={headers} data={data} />\n        </div>\n      );\n    }\n    default:\n      throw new Error(\"This should be impossible\");\n  }\n}\n\nconst TransactionsTable = ({ web3State, blockInputs, endStatusCallback }) => {\n  console.log(\"TransactionTable component ---- render\");\n  const { startBlock, endBlock } = blockInputs;\n  const [transactionState, dispatch] = useContext(TransactionContext);\n  const [selectedFilter, setSelectedFilter] = useState(SENDER);\n  const [tableState, setTableState] = useState({\n    data: [],\n    headers: SENDER_HEADERS,\n  });\n\n  /**\n   * Re-load transaction data anytime a new start or end block is submitted\n   */\n  useEffect(() => {\n    console.log(\n      \"TransactionsTable useEffect(startBlock, endBlock) --- render --- status: \",\n      transactionState.status\n    );\n\n    if (!startBlock || !selectedFilter) {\n      console.log(\n        \"TransactionsTable useEffect(startBlock, endBlock) -- base case\"\n      );\n\n      return;\n    }\n    async function loadTransactionData() {\n      dispatch({\n        type: Status.PENDING,\n      });\n\n      const blocks = await getBlocks(startBlock, endBlock, web3State);\n      const transactions = await getTransactionsFromBlocks(blocks, web3State);\n      const finalStatus = !transactions ? Status.REJECTED : Status.RESOLVED;\n\n      dispatch({\n        data: transactions,\n        type: finalStatus,\n      });\n    }\n\n    loadTransactionData();\n    return () => {\n      console.log(\n        \"TransactionsTable --- useEffect(startBlock, endBlock) ---- cleanup\"\n      );\n    };\n  }, [startBlock, endBlock]);\n\n  useEffect(() => {\n    console.log(\n      \"TransactionsTable --- useEffect(txData, selectedFilter) --- render\"\n    );\n    if (transactionState.status !== Status.RESOLVED) {\n      console.log(\n        \"TransactionsTable --- useEffect(txData, selectedFilter) -- base case \"\n      );\n      return;\n    }\n\n    const groupedTransactions = groupAndFilterTransactions(\n      transactionState.data,\n      selectedFilter.value\n    );\n    const headers = getHeaders(selectedFilter.value);\n    setTableState({\n      data: groupedTransactions,\n      headers,\n    });\n  }, [transactionState.data, selectedFilter]);\n\n  useEffect(() => {\n    console.log(\"TransactionTable useEffect(status) --- render\");\n    if (transactionState.status === Status.RESOLVED) {\n      transactionState.endStatusCallback();\n    }\n  }, [transactionState.status]);\n\n  function groupAndFilterTransactions(data, selectedFilter) {\n    const groupedTransactions = groupTransactions(data, selectedFilter).filter(\n      (tx) => !!tx.address\n    );\n    return groupedTransactions;\n  }\n\n  function getHeaders(selectedFilter) {\n    return selectedFilter === SENDER.value ? SENDER_HEADERS : RECIPIENT_HEADERS;\n  }\n\n  function handleFilterToggle(newFilter) {\n    setSelectedFilter(newFilter === SENDER.value ? SENDER : RECIPIENT);\n  }\n\n  return (\n    <>\n      {transactionState.status === Status.RESOLVED && (\n        <TableFilterComponent toggleCallback={handleFilterToggle} />\n      )}\n      {TableIfExists(transactionState, tableState)}\n    </>\n  );\n};\n\nexport default TransactionsTable;\n","import { BigNumber } from \"ethers\";\n\n/**\n *\n * @param {Array} txArray list of transactions\n * @param {string} groupByKey the groupBy key\n * @returns a list of transaction totals, grouped by the groupByKey\n */\nfunction groupTransactions(txArray, groupByKey) {\n  const totals = [];\n  txArray.reduce((results, tx) => {\n    if (!results[groupByKey]) {\n      results[tx[groupByKey]] = {\n        value: BigNumber.from(\"0\"),\n      };\n      // set the correct groupBy key\n      results[tx[groupByKey]][\"address\"] = tx[groupByKey];\n      //set a hash to act as a key\n      results[tx[groupByKey]][\"hash\"] = tx[\"hash\"];\n      totals.push(results[tx[groupByKey]]);\n    }\n    results[tx[groupByKey]].value = results[tx[groupByKey]].value.add(tx.value);\n    return results;\n  }, {});\n  return totals;\n}\n\nexport { groupTransactions };\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Disclaimer = ({ message }) => {\n  return (\n    <Row className=\"centeralign\">\n      <div className=\"h3\">Disclaimer</div>\n      <Row>\n        <p>{message}</p>\n      </Row>\n    </Row>\n  );\n};\n\nexport default Disclaimer;\n","const Totals = {\n  TOTAL_ETH_MOVED: {\n    label: \"Total Ether transferred (ETH)\",\n  },\n  TOTAL_NUM_TRANSACTIONS: {\n    label: \"Total # transactions\",\n  },\n  TOTAL_NUM_CONTRACT_ADDRESSES: {\n    label: \"Total # contract addresses\",\n  },\n};\n\nexport default Totals;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { TransactionContext } from \"../Context/TransactionContextProvider\";\nimport {\n  getFromAddresses,\n  getToAddresses,\n  getAddressCodes,\n  isContractCode,\n  toEther,\n} from \"../../utils/ethereumUtils\";\nimport { BigNumber } from \"ethers\";\nimport Totals from \"../../global/Totals\";\n\nconst TotalsPanel = ({ web3State }) => {\n  const [transactionState] = useContext(TransactionContext);\n  const [displayData, setDisplayData] = useState({\n    data: [],\n    totalsLoaded: false,\n  });\n\n  const styles = {\n    border: {\n      borderColor: \"darkblue\",\n      border: \"double\",\n      borderWidth: \"thick\",\n    },\n  };\n\n  useEffect(() => {\n    console.log(\n      \"TotalsPanel component --- useEffect(transactionState) --- render\"\n    );\n    if (!transactionState.data || transactionState.data.length === 0) {\n      console.log(\n        \"TotalsPanel component --- useEffect(transactionState) --- base case\"\n      );\n      return;\n    }\n\n    const totalNumTransactions = transactionState.data.length;\n    const totalEthTransferred = getTotalEthTransferred();\n\n    getTotalNumContractAddresses().then((codes) => {\n      const contractAddresses = codes.filter(isContractCode);\n      const totalNumContractAddresses = contractAddresses.length;\n      setDisplayData({\n        data: [\n          {\n            label: Totals.TOTAL_ETH_MOVED.label,\n            value: totalEthTransferred,\n          },\n          {\n            label: Totals.TOTAL_NUM_TRANSACTIONS.label,\n            value: totalNumTransactions,\n          },\n          {\n            label: Totals.TOTAL_NUM_CONTRACT_ADDRESSES.label,\n            value: totalNumContractAddresses,\n          },\n        ],\n        totalsLoaded: true,\n      });\n    });\n\n    return () => {\n      console.log(\"TotalsPanel --- useEffect(transactionState) --- cleanup\");\n      setDisplayData({ totalsLoaded: false });\n    };\n  }, [transactionState]);\n\n  function getTotalEthTransferred() {\n    const { data } = transactionState;\n    const values = data.map((d) => d.value);\n    const totalEthMoved =\n      values.length > 0\n        ? values.reduce((a, b) => a.add(b))\n        : BigNumber.from(\"0\");\n\n    const wei = totalEthMoved.toString();\n    const eth = toEther(wei);\n    return eth;\n  }\n\n  function getTotalNumContractAddresses() {\n    const { data } = transactionState;\n    const fromAddresses = getFromAddresses(data);\n    const toAddresses = getToAddresses(data);\n    const addresses = [...fromAddresses, ...toAddresses];\n\n    return getAddressCodes(addresses, web3State);\n  }\n\n  return (\n    displayData.totalsLoaded && (\n      <div style={styles.border}>\n        {displayData.data.map((data) => {\n          return (\n            <p key={data.label}>\n              <strong>{data.label}: </strong>\n              {data.value}\n            </p>\n          );\n        })}\n      </div>\n    )\n  );\n};\n\nexport default TotalsPanel;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ConnectWalletButton = ({ web3State, connectWalletCb }) => {\n  const styles = {\n    connected: {\n      fontStyle: \"italic\",\n    },\n  };\n\n  return !web3State.connected ? (\n    <>\n      <Button onClick={connectWalletCb} variant=\"primary\">\n        Connect Wallet\n      </Button>\n    </>\n  ) : (\n    <div style={styles.connected}>\n      {\" \"}\n      Wallet Connected: {web3State.account.slice(0, 3)}...\n      {web3State.account.slice(-3)}\n    </div>\n  );\n};\n\nexport default ConnectWalletButton;\n","import React, { useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport logo from \"./images/magnifying-glass-icon.png\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { TransactionContextProvider } from \"./components/\";\nimport { BlockInput, Disclaimer, ConnectWalletButton } from \"./components\";\nimport {\n  connectWallet,\n  getEthereumProvider,\n  walletIsConnected,\n} from \"./utils/ethereumUtils\";\n\nconst App = () => {\n  console.log(\"App component -- render\");\n  const [web3State, setWeb3State] = useState({\n    ethereum: null,\n    account: null,\n    provider: null,\n    connected: false,\n  });\n\n  const [blockInputs, setBlockInputs] = useState({\n    startBlock: null,\n    endBlock: null,\n  });\n\n  const [blockInputsDisabled, setBlockInputsDisabled] = useState(false);\n\n  useEffect(() => {\n    console.log(\"App --- useEffect() -- render\");\n    const { ethereum } = window;\n    const provider = getEthereumProvider(ethereum);\n    async function loadWeb3State() {\n      return walletIsConnected();\n    }\n    loadWeb3State().then((response) => {\n      const { connected, accounts } = response;\n      setBlockInputsDisabled(!connected);\n      if (!connected || !accounts) {\n        return;\n      }\n      const account = connected ? accounts[0] : null;\n      setWeb3State({\n        ethereum,\n        provider,\n        account,\n        connected,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    setBlockInputsDisabled(!web3State.connected);\n  }, [web3State.connected]);\n\n  async function handleConnectWallet() {\n    const [ethereum, provider, account] = await connectWallet(setWeb3State);\n    setWeb3State({ ethereum, provider, account, connected: true });\n  }\n\n  function onBlockInputSubmit(newStart, newEnd) {\n    const startBlockChanged = newStart !== blockInputs.startBlock;\n    const endBlockChanged = newEnd !== blockInputs.endBlock;\n    if (startBlockChanged || endBlockChanged) {\n      setBlockInputsDisabled(true);\n    }\n\n    setBlockInputs({ startBlock: newStart, endBlock: newEnd });\n  }\n\n  const disclaimerMessage = () => {\n    const msg = `In order for this app to work successfully, you must have a Metamask or Web3 provider\n          account setup.`;\n    return msg;\n  };\n  const styles = {\n    blockInput: {\n      borderStyle: \"outset\",\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Ether Cash Flow</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">Block Explorer</h1>\n      </header>\n      <ToastContainer />\n      <Row>\n        <Col md={10} />\n        <Col md={2}>\n          <ConnectWalletButton\n            web3State={web3State}\n            connectWalletCb={handleConnectWallet}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={2} />\n        <Col md={8} style={styles.blockInput}>\n          <BlockInput\n            onSubmit={onBlockInputSubmit}\n            fetchDisabled={blockInputsDisabled}\n          />\n        </Col>\n        <Col md={2} />\n      </Row>\n      <br />\n\n      <Row>\n        <Col md={2} />\n        <Col md={8}>\n          <TransactionContextProvider\n            web3State={web3State}\n            blockInputs={blockInputs}\n            endStatusCallback={() => setBlockInputsDisabled(false)}\n          />\n        </Col>\n        <Col md={2} />\n      </Row>\n      <footer className=\"App-footer\" style={{ marginTop: \"20px\" }}>\n        <Disclaimer message={disclaimerMessage()} />\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}