{"version":3,"sources":["images/magnifying-glass-icon.png","components/BlockInput/index.js","global/Status.js","components/Context/TransactionContextProvider.js","global/TableFilter.js","components/TransactionsTable/TableFilterComponent.js","components/TransactionsTable/TableDisplay.js","utils/ethereumUtils.js","global/TableHeaders.js","components/TransactionsTable/TransactionsTable.js","utils/transactionUtils.js","components/Disclaimer/index.js","global/Totals.js","components/TotalsPanel/index.js","components/ConnectWalletButton/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BlockInput","_ref","onSubmit","_ref$fetchDisabled","fetchDisabled","console","log","NUMBERS_PATTERN","_useState","useState","_useState2","Object","slicedToArray","error","setError","startRef","useRef","endRef","numbersOnly","val","test","handleSubmit","e","parseInt","current","value","styles","fetchData","marginBottom","marginTop","requiredField","color","react_default","a","createElement","className","preventDefault","Row","Col","md","htmlFor","style","requiredFieldStyle","id","ref","type","onChange","target","placeholder","required","disabled","role","Status","IDLE","PENDING","RESOLVED","REJECTED","FILTERED","TransactionContext","React","createContext","transactionReducer","state","action","status","data","endStatusCallback","toast","warn","position","POSITION","TOP_RIGHT","autoClose","success","Error","concat","TransactionContextProvider","web3State","blockInputs","_useReducer","useReducer","_useReducer2","transactionState","dispatch","Provider","components_TotalsPanel","components_TransactionsTable_TransactionsTable","TableFilter","SENDER","text","RECIPIENT","TableFilterComponent","toggleCallback","filters","filterGroup","toggleFilter","element","classList","contains","toggle","nextSibling","previousSibling","toggleFilterClasses","useEffect","children","ButtonGroup","paddingTop","paddingBottom","justified","size","map","filter","Button","height","fontSize","onClick","key","TableDisplay","headers","_ref$data","tableStyles","maxHeight","overflowY","dataStyles","resultsRow","textAlign","length","Table","striped","bordered","condensed","hover","header","item","hash","address","toString","walletIsConnected","_callee","_window","ethereum","connected","accounts","regenerator_default","wrap","_context","prev","next","window","request","method","sent","Boolean","abrupt","t0","stop","connectWallet","_callee2","_window2","provider","_context2","ethers","providers","Web3Provider","getBlockRange","start","end","Array","from","keys","x","createRange","getBlocks","_callee3","promises","_context3","getBlockNumber","forEach","blockNum","push","getBlock","Promise","all","getTransactionsFromBlocks","blocks","arguments","undefined","hashes","blockResponse","transactions","toConsumableArray","getTxHashesFromBlocks","getTransaction","mapToSenderAddress","tx","mapToRecipientAddress","to","isContractCode","c","getMappedAddresses","txList","mapFunction","constructor","addr","_callee4","addresses","codePromises","_context4","getCode","TableHeaders","SENDER_HEADERS","RECIPIENT_HEADERS","TransactionsTable","startBlock","endBlock","_useContext","useContext","_useContext2","selectedFilter","setSelectedFilter","_useState3","_useState4","tableState","setTableState","_loadTransactionData","apply","this","loadTransactionData","asyncToGenerator","mark","groupedTransactions","txArray","groupByKey","totals","reduce","results","BigNumber","add","groupAndFilterTransactions","getHeaders","Fragment","TransactionsTable_TableFilterComponent","newFilter","loader","variant","tableStyle","noRecordsFound","recordsNotRenderedYet","TransactionsTable_TableDisplay","TableIfExists","Disclaimer","message","Totals","TOTAL_ETH_MOVED","label","TOTAL_NUM_TRANSACTIONS","TOTAL_NUM_CONTRACT_ADDRESSES","TotalsPanel","totalsLoaded","displayData","setDisplayData","wei","values","fromAddresses","toAddresses","totalNumTransactions","totalEthTransferred","d","b","utils","formatEther","getToAddresses","getAddressCodes","then","codes","totalNumContractAddresses","borderColor","border","borderWidth","ConnectWalletButton","connectWalletCb","App","account","setWeb3State","setBlockInputs","_useState5","_useState6","blockInputsDisabled","setBlockInputsDisabled","_handleConnectWallet","_yield$connectWallet","_yield$connectWallet2","getEthereumProvider","_loadWeb3State","loadWeb3State","response","blockInput","borderStyle","fontStyle","src","logo","alt","lib","slice","components_ConnectWalletButton","components_BlockInput","newStart","newEnd","startBlockChanged","endBlockChanged","components_Disclaimer","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mVCiGzBC,EA7FI,SAAAC,GAAyC,IAAtCC,EAAsCD,EAAtCC,SAAsCC,EAAAF,EAA5BG,qBAA4B,IAAAD,KAC1DE,QAAQC,IAAI,kCACZ,IAAMC,EAAkB,aAFkCC,EAGhCC,mBAAS,MAHuBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGnDK,EAHmDH,EAAA,GAG5CI,EAH4CJ,EAAA,GAIpDK,EAAWC,mBACXC,EAASD,mBAETE,EAAc,SAACC,GAAD,OACjBA,GAAOZ,EAAgBa,KAAKD,GAAO,KAAO,gBAY7C,SAASE,EAAaC,GACpBpB,EAASqB,SAASR,EAASS,QAAQC,OAAQF,SAASN,EAAOO,QAAQC,QAGrE,IAAMC,EAAS,CACbC,UAAW,CACTC,aAAc,OACdC,UAAW,QAGbC,cAAe,CAAEC,MAAO,QAG1B,OACEC,EAAAC,EAAAC,cAAA,QACEC,UAAU,OACVjC,SAAU,SAACoB,GACTA,EAAEc,iBACFf,MAGFW,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACPP,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,oBAAoBL,UAAU,yBAC3CH,EAAAC,EAAAC,cAAA,wBADF,IACqBF,EAAAC,EAAAC,cAAA,KAAGO,MAAOf,EAAOgB,oBAAjB,MAErBV,EAAAC,EAAAC,cAAA,SACES,GAAG,oBACHC,IAAK7B,EACL8B,KAAK,SACLC,SAxCV,SAA4BxB,GAC1BR,EAASI,EAAYI,EAAEyB,OAAOtB,SAwCtBU,UAAU,+BACVa,YAAY,WACZC,UAAQ,EACRC,UAAU,MAIhBlB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACPP,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,kBAAkBL,UAAU,yBACzCH,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,SACES,GAAG,kBACHC,IAAK3B,EACL4B,KAAK,SACLC,SArDV,SAA0BxB,GACD,OAAnBA,EAAEyB,OAAOtB,OACXX,EAASI,EAAYI,EAAEyB,OAAOtB,SAoDxBU,UAAU,+BACVa,YAAY,WACZC,UAAU,EACVC,UAAU,MAIhBlB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKiB,KAAK,QAAQV,MAAOf,EAAOI,eAC7BjB,IAILmB,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLK,SAAU9C,EACVqC,MAAOf,EAAOC,UACdQ,UAAU,oCAJZ,yBC7ESiB,EARA,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,SAAU,YCECC,EAAqBC,IAAMC,gBAExC,SAASC,EAAmBC,EAAOC,GAEjC,OADA1D,QAAQC,IAAI,8CACJyD,EAAOlB,MACb,KAAKO,EAAOC,KAEV,OADAhD,QAAQC,IAAI,oDACL,CACL0D,OAAQZ,EAAOC,KACfY,KAAM,KACNpD,MAAO,KACPqD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOE,QAMV,OALAjD,QAAQC,IAAI,uDACZ6D,QAAMC,KAAK,mDAAoD,CAC7DC,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOE,QACfW,KAAM,KACNpD,MAAO,KACPqD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOG,SAMV,OALAlD,QAAQC,IAAI,wDACZ6D,QAAMM,QAAQ,4BAA6B,CACzCJ,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOG,SACfU,KAAMF,EAAOE,KACbpD,MAAO,KACPqD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOI,SASV,OARAnD,QAAQC,IACN,uDACAyD,EAAOlD,OAETsD,QAAMtD,MAAM,oBAAsBkD,EAAOlD,MAAO,CAC9CwD,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAEN,CACLR,OAAQZ,EAAOI,SACfS,KAAM,KACNpD,MAAOkD,EAAOlD,MACdqD,kBAAmBJ,EAAMI,mBAG7B,KAAKd,EAAOK,SACV,MAAO,CACLO,OAAQZ,EAAOK,SACfQ,KAAMF,EAAOE,KACbpD,MAAO,KACPqD,kBAAmBJ,EAAMI,mBAG7B,QAEE,MADA7D,QAAQC,IAAI,wDACN,IAAIoE,MAAJ,0BAAAC,OAAoCZ,EAAOlB,QAKhD,SAAS+B,EAAT3E,GAIJ,IAHD4E,EAGC5E,EAHD4E,UACAC,EAEC7E,EAFD6E,YACAZ,EACCjE,EADDiE,kBACCa,EACoCC,qBAAWnB,EAAoB,CAClEI,KAAM,GACND,OAAQZ,EAAOC,KACfa,kBAAmBA,IAJpBe,EAAAtE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GACMG,EADND,EAAA,GACwBE,EADxBF,EAAA,GAOD,OACEjD,EAAAC,EAAAC,cAACwB,EAAmB0B,SAApB,CAA6B3D,MAAO,CAACyD,EAAkBC,IACrDnD,EAAAC,EAAAC,cAACmD,EAAD,CAAaR,UAAWA,IACxB7C,EAAAC,EAAAC,cAACoD,EAAD,CACET,UAAWA,EACXC,YAAaA,EACbZ,kBAAmBA,iBCpFZqB,EAXK,CAClBC,OAAQ,CACNC,KAAM,mBACNhE,MAAO,QAETiE,UAAW,CACTD,KAAM,sBACNhE,MAAO,OCHH+D,EAAsBD,EAAtBC,OAAQE,EAAcH,EAAdG,UA2DDC,EAzDc,SAAA1F,GAAwB,IAArB2F,EAAqB3F,EAArB2F,eACxBC,EAAU,CAACL,EAAQE,GACnBI,EAAc9E,mBA0BpB,SAAS+E,EAAaC,GACpB,IAAMjD,EAASiD,EAAQjD,QAfzB,SAA6BA,GAM3B,IAIkBiD,EATdjD,EAAOkD,UAAUC,SAAS,iBAI9BnD,EAAOkD,UAAUE,OAAO,iBAKNH,EAJSjD,GAKZqD,YAAcJ,EAAQI,YAAcJ,EAAQK,iBAJnDJ,UAAUE,OAAO,gBASzBG,CAAoBvD,GACpB6C,EAAe7C,EAAOtB,OAGxB,OA/BA8E,oBAAU,WACHT,GAGqBA,EAIiBtE,QAAQgF,SAAS,GAC5CP,UAAUE,OAAO,gBAJhC,CAACL,IA2BF9D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACEhE,MAAO,CAAEiE,WAAY,OAAQC,cAAe,QAC5CC,UAAU,OACVC,KAAK,KACL1E,UAAU,OACVS,IAAKkD,GAEJD,EAAQiB,IAAI,SAACC,GAAD,OACX/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CACErE,GAAIoE,EAAOtF,MACXgB,MAAO,CAAEwE,OAAQ,OAAQC,SAAU,WACnCC,QAASpB,EACTtE,MAAOsF,EAAOtF,MACd2F,IAAKL,EAAOtF,OAEXsF,EAAOtB,kBCTH4B,EA5CM,SAAApH,GAA4B,IAAzBqH,EAAyBrH,EAAzBqH,QAAyBC,EAAAtH,EAAhBgE,YAAgB,IAAAsD,EAAT,GAASA,EAC/ClH,QAAQC,IAAI,sCACZ,IAAMkH,EAAc,CAClBC,UAAW,QACXC,UAAW,SACX9F,aAAc,QAEV+F,EAAa,CACjBC,WAAY,CACVC,UAAW,SAgCf,OA5ByB,IAAhB5D,EAAK6D,OACV9F,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,UAAU,OAAOC,OAAK,EAAC1F,MAAO+E,GACpDxF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGoF,EAAQ7F,MAAMqF,IAAI,SAACsB,GAAD,OACjBpG,EAAAC,EAAAC,cAAA,MAAIkF,IAAKgB,GAASA,OAIxBpG,EAAAC,EAAAC,cAAA,aACG+B,EAAK6C,IAAI,SAACuB,GAAD,OACRrG,EAAAC,EAAAC,cAAA,MACEkF,IAAG,OAAAzC,OAAS0D,EAAKC,MACjBnG,UAAU,WACVM,MAAOkF,EAAWC,YAElB5F,EAAAC,EAAAC,cAAA,UAAKmG,EAAKE,SACVvG,EAAAC,EAAAC,cAAA,UAAKmG,EAAK5G,MAAM+G,4CCtBjBC,8EAAf,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAA9G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAAAP,EAEyBS,OAAbR,EAFZD,EAEYC,SAFZ,CAAAK,EAAAE,KAAA,QAKM9I,QAAQ+D,KAAK,+BACbyE,GAAY,EANlBI,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAQ6BP,EAASS,QAAQ,CAAEC,OAAQ,iBARxD,cAQYR,EARZG,EAAAM,KASMV,EAAYW,QAAQV,EAAShB,OAAS,GAT5CmB,EAAAQ,OAAA,SAUa,CAAEZ,YAAWC,aAV1B,QAAAG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAaI5I,QAAQQ,MAARoI,EAAAS,IAbJ,yBAAAT,EAAAU,SAAAjB,EAAA,kDAiBekB,8EAAf,SAAAC,IAAA,IAAAC,EAAAlB,EAAAE,EAAAiB,EAAA,OAAAhB,EAAA9G,EAAA+G,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAAAa,EAAAd,KAAA,EAAAY,EAEyBV,OAAbR,EAFZkB,EAEYlB,SAFZ,CAAAoB,EAAAb,KAAA,eAIM9I,QAAQ+D,KAAK,qBAJnB4F,EAAAP,OAAA,wBAAAO,EAAAb,KAAA,EAO2BP,EAASS,QAAQ,CACtCC,OAAQ,wBARd,cAOUR,EAPVkB,EAAAT,KAUUQ,EAAW,IAAIE,IAAOC,UAAUC,aAAavB,GAVvDoB,EAAAP,OAAA,SAWW,CAACb,EAAUmB,EAAUjB,EAAS,KAXzC,QAAAkB,EAAAd,KAAA,GAAAc,EAAAN,GAAAM,EAAA,SAaI3J,QAAQQ,MAARmJ,EAAAN,IAbJ,yBAAAM,EAAAL,SAAAE,EAAA,yCA2BA,SAASO,EAAcC,EAAOC,GAC5B,OALF,SAAqBD,EAAOC,GAC1B,OAAOC,MAAMC,KAAKD,MAAMD,EAAMD,EAAQ,GAAGI,QAAQ3D,IAAI,SAAC4D,GAAD,OAAOA,EAAIL,IAIzDM,CAAYpJ,SAAS8I,GAAQ9I,SAAS+I,aAGhCM,mFAAf,SAAAC,EAAyBR,EAAOC,EAAKzF,GAArC,IAAAkF,EAAAe,EAAA,OAAA/B,EAAA9G,EAAA+G,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,UACUY,EAAalF,EAAbkF,SACHO,GAAe,MAARA,EAFd,CAAAS,EAAA5B,KAAA,eAAA4B,EAAA5B,KAAA,EAGgBY,EAASiB,iBAHzB,OAGIV,EAHJS,EAAAxB,KAIIlJ,QAAQC,IAAR,8BAAAqE,OAA0C2F,IAJ9C,cAMQQ,EAAW,GACEV,EAAcC,EAAOC,GAC7BW,QAAQ,SAACC,GAClBJ,EAASK,KAAKpB,EAASqB,SAASF,MATpCH,EAAAtB,OAAA,SAWS4B,QAAQC,IAAIR,IAXrB,yBAAAC,EAAApB,SAAAkB,6BAyBA,SAASU,IAAkD,IAAxBC,EAAwBC,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAClC1B,GADiD0B,UAAA3D,OAAA,EAAA2D,UAAA,QAAAC,GACjD3B,SACR,GAAKA,EAAL,CAIA,IAAM4B,EAjBR,SAA+BH,GAC7B,IAAIG,EAAS,GAOb,OANAH,EAAOP,QAAQ,SAACW,GACVA,GAAiBA,EAAcC,eACjCF,EAAM,GAAAhH,OAAAhE,OAAAmL,EAAA,EAAAnL,CAAOgL,GAAPhL,OAAAmL,EAAA,EAAAnL,CAAkBiL,EAAcC,kBAInCF,EASQI,CAAsBP,GAC/BV,EAAW,GAMjB,OAJAa,EAAOV,QAAQ,SAAC3C,GACdwC,EAASK,KAAKpB,EAASiC,eAAe1D,MAGjC+C,QAAQC,IAAIR,GAVjBzK,QAAQQ,MAAM,kDAalB,IAAMoL,EAAqB,SAACC,GAAD,OAAQA,EAAG1B,MAChC2B,EAAwB,SAACD,GAAD,OAAQA,EAAGE,IACnCC,EAAiB,SAACC,GAAD,MAAa,OAANA,GAgB9B,SAASC,EAAmBC,EAAQC,GAOlC,OALID,GAAUA,EAAOE,cAAgBnC,MACvBiC,EAAO1F,IAAI2F,GAAa1F,OAAO,SAAC4F,GAAD,QAAYA,IAE3C,8CAWhB,SAAAC,EAA+BC,EAAWhI,GAA1C,IAAAkF,EAAA+C,EAAA,OAAA/D,EAAA9G,EAAA+G,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cACUY,EAAalF,EAAbkF,SACF+C,EAAe,GACrBD,EAAU5B,QAAQ,SAAC1C,GACjBuE,EAAa3B,KAAKpB,EAASiD,QAAQzE,MAJvCwE,EAAAtD,OAAA,SAOS4B,QAAQC,IAAIwB,IAPrB,wBAAAC,EAAApD,SAAAiD,wCCzIA,IAWeK,EAXM,CACnBC,eAAgB,CACdvK,GAAI,SACJlB,MAAO,CAAC,iBAAkB,qBAE5B0L,kBAAmB,CACjBxK,GAAI,YACJlB,MAAO,CAAC,oBAAqB,0BCMzB+D,EAAsBD,EAAtBC,OAAQE,EAAcH,EAAdG,UACRwH,EAAsCD,EAAtCC,eAAgBC,EAAsBF,EAAtBE,kBA8CxB,IAqGeC,EArGW,SAAAnN,GAAgC,IAA7B4E,EAA6B5E,EAA7B4E,UAAWC,EAAkB7E,EAAlB6E,YACtCzE,QAAQC,IAAI,0CAD4C,IAEhD+M,EAAyBvI,EAAzBuI,WAAYC,EAAaxI,EAAbwI,SAFoCC,EAGnBC,qBAAW9J,GAHQ+J,EAAA9M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAGjDrI,EAHiDuI,EAAA,GAG/BtI,EAH+BsI,EAAA,GAAAjN,EAIZC,mBAAS+E,GAJG9E,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIjDkN,EAJiDhN,EAAA,GAIjCiN,EAJiCjN,EAAA,GAAAkN,EAKpBnN,mBAAS,CAC3CwD,KAAM,GACNqD,QAAS4F,IAP6CW,EAAAlN,OAAAC,EAAA,EAAAD,CAAAiN,EAAA,GAKjDE,EALiDD,EAAA,GAKrCE,EALqCF,EAAA,GA2FxD,OA9EAtH,oBAAU,WAMR,GALAlG,QAAQC,IACN,4EACA4E,EAAiBlB,QAGdqJ,GAAeK,EAqBpB,OA3Bc,WAAAM,EAAAC,MAAAC,KAAAzC,WA0Bd0C,GACO,WACL9N,QAAQC,IACN,uEA7BU,SAAA0N,IAAA,OAAAA,EAAArN,OAAAyN,EAAA,EAAAzN,CAAAoI,EAAA9G,EAAAoM,KAad,SAAA3F,IAAA,IAAA8C,EAAAK,EAAA,OAAA9C,EAAA9G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEhE,EAAS,CACPtC,KAAMO,EAAOE,UAFjB2F,EAAAE,KAAA,EAKuByB,EAAUyC,EAAYC,EAAUzI,GALvD,cAKQ2G,EALRvC,EAAAM,KAAAN,EAAAE,KAAA,EAM6BoC,EAA0BC,EAAQ3G,GAN/D,OAMQgH,EANR5C,EAAAM,KAOEpE,EAAS,CACPlB,KAAM4H,EACNhJ,KAAMO,EAAOG,WATjB,wBAAA0F,EAAAU,SAAAjB,OAbcuF,MAAAC,KAAAzC,WAOZpL,QAAQC,IACN,mEAwBH,CAAC+M,EAAYC,IAEhB/G,oBAAU,WAIR,GAHAlG,QAAQC,IACN,sEAEGoN,GAAkBxI,EAAiBlB,SAAWZ,EAAOG,SAA1D,CAOA,IAAM+K,EAkBR,SAAoCrK,EAAMyJ,GAIxC,OCpIuBa,EDiIuBtK,ECjIduK,EDiIoBd,EChIhDe,EAAS,GACfF,EAAQG,OAAO,SAACC,EAASzC,GAYvB,OAXKyC,EAAQH,KACXG,EAAQzC,EAAGsC,IAAe,CACxB/M,MAAOmN,IAAUpE,KAAK,MAGxBmE,EAAQzC,EAAGsC,IAAX,QAAqCtC,EAAGsC,GAExCG,EAAQzC,EAAGsC,IAAX,KAAkCtC,EAAE,KACpCuC,EAAOtD,KAAKwD,EAAQzC,EAAGsC,MAEzBG,EAAQzC,EAAGsC,IAAa/M,MAAQkN,EAAQzC,EAAGsC,IAAa/M,MAAMoN,IAAI3C,EAAGzK,OAC9DkN,GACN,IACIF,GDiH+D1H,OAClE,SAACmF,GAAD,QAAUA,EAAG3D,UClInB,IAA2BgG,EAASC,EAC5BC,ED6GwBK,CAC1B5J,EAAiBjB,KACjByJ,EAAejM,OAEX6F,EAqBR,SAAoBoG,GAClB,OAAOA,IAAmBlI,EAAO/D,MAAQyL,EAAiBC,EAtB1C4B,CAAWrB,EAAejM,OAC1CsM,EAAc,CACZ9J,KAAMqK,EACNhH,iBAbAjH,QAAQC,IACN,0EAcH,CAAC4E,EAAiBjB,KAAMyJ,IAE3BnH,oBAAU,WACRlG,QAAQC,IAAI,iDACR4E,EAAiBlB,SAAWZ,EAAOG,UACrC2B,EAAiBhB,qBAElB,CAACgB,EAAiBlB,SAkBnBhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+M,SAAA,KACG9J,EAAiBlB,SAAWZ,EAAOG,UAClCvB,EAAAC,EAAAC,cAAC+M,EAAD,CAAsBrJ,eAP5B,SAA4BsJ,GAC1BvB,EAAkBuB,IAAc1J,EAAO/D,MAAQ+D,EAASE,MApI5D,SAAuBR,EAAkB4I,GACvC,IAAMqB,EACJnN,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAQoI,QAAQ,OAAOzM,GAAG,SAASR,UAAU,eAA7C,cAIIkN,EAAa,CAAE5H,UAAW,QAASC,UAAW,UACpD,OAAQxC,EAAiBlB,QACvB,KAAKZ,EAAOC,KACV,OAAOrB,EAAAC,EAAAC,cAAA,2CACT,KAAKkB,EAAOE,QACV,OAAO6L,EACT,KAAK/L,EAAOI,SACV,MAAM,IAAIkB,MAAM,oBAClB,KAAKtB,EAAOG,SAAZ,IACUU,EAAkB6J,EAAlB7J,KAAMqD,EAAYwG,EAAZxG,QACRgI,EAAkD,IAAjCpK,EAAiBjB,KAAK6D,OACvCyH,EACJrK,EAAiBjB,KAAK6D,OAAS,GAAqB,IAAhB7D,EAAK6D,OAa3C,OAXIwH,EACQtN,EAAAC,EAAAC,cAAA,gCACDqN,EACCJ,EAGRnN,EAAAC,EAAAC,cAAA,OAAKO,MAAO4M,GACVrN,EAAAC,EAAAC,cAACsN,EAAD,CAAclI,QAASA,EAASrD,KAAMA,KAK9C,KAAKb,EAAOK,SACV,OACEzB,EAAAC,EAAAC,cAAA,OAAKO,MAAO4M,GACVrN,EAAAC,EAAAC,cAACsN,EAAD,CAAclI,QAASA,EAASrD,KAAMA,KAI5C,QACE,MAAM,IAAIS,MAAM,8BAoGf+K,CAAcvK,EAAkB4I,KE9IxB4B,EAXI,SAAAzP,GAAiB,IAAd0P,EAAc1P,EAAd0P,QACpB,OACE3N,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,cACAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,SAAIyN,MCIGC,EAZA,CACbC,gBAAiB,CACfC,MAAO,iCAETC,uBAAwB,CACtBD,MAAO,wBAETE,6BAA8B,CAC5BF,MAAO,+BCmGIG,EA/FK,SAAAhQ,GAAmB,IAAhB4E,EAAgB5E,EAAhB4E,UAAgB0I,EACVC,qBAAW9J,GAA/BwB,EAD8BvE,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,MAAA/M,EAECC,mBAAS,CAC7CwD,KAAM,GACNiM,cAAc,IAJqBxP,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE9B2P,EAF8BzP,EAAA,GAEjB0P,EAFiB1P,EAAA,GA+ErC,OAhEA6F,oBAAU,WAIR,GAHAlG,QAAQC,IACN,oEAEG4E,EAAiBjB,MAAyC,IAAjCiB,EAAiBjB,KAAK6D,OAApD,CAOA,INpCauI,EMqEPC,EAYErM,EACFsM,EACAC,ENsBgBhE,EMrEhBiE,EAAuBvL,EAAiBjB,KAAK6D,OAC7C4I,GAgCAJ,EADWpL,EAATjB,KACY6C,IAAI,SAAC6J,GAAD,OAAOA,EAAElP,QNrEpB4O,GMuEXC,EAAOxI,OAAS,EACZwI,EAAO5B,OAAO,SAACzM,EAAG2O,GAAJ,OAAU3O,EAAE4M,IAAI+B,KAC9BhC,IAAUpE,KAAK,MAEKhC,WN1ErByB,IAAO4G,MAAMC,YAAYT,EAAK,UM4DnC,OAoBQpM,EAASiB,EAATjB,KNwBcuI,EMvBiBvI,EAAjCsM,ENwBDhE,EAAmBC,EAAQP,GMvB1BuE,EN0BV,SAAwBhE,GACtB,OAAOD,EAAmBC,EAAQL,GM3BZ4E,CAAe9M,gDAG5B+M,CAFQ,GAAArM,OAAAhE,OAAAmL,EAAA,EAAAnL,CAAO4P,GAAP5P,OAAAmL,EAAA,EAAAnL,CAAyB6P,IAEN3L,IA/CHoM,KAAK,SAACC,GACnC,IACMC,EADoBD,EAAMnK,OAAOsF,GACavE,OACpDsI,EAAe,CACbnM,KAAM,CACJ,CACE6L,MAAOF,EAAOC,gBAAgBC,MAC9BrO,MAAOiP,GAET,CACEZ,MAAOF,EAAOG,uBAAuBD,MACrCrO,MAAOgP,GAET,CACEX,MAAOF,EAAOI,6BAA6BF,MAC3CrO,MAAO0P,IAGXjB,cAAc,MAIX,WACL7P,QAAQC,IAAI,2DACZ8P,EAAe,CAAEF,cAAc,KAjC/B7P,QAAQC,IACN,wEAkCH,CAAC4E,IAyBFiL,EAAYD,cACVlO,EAAAC,EAAAC,cAAA,OAAKO,MAzEC,CACN2O,YAAa,WACbC,OAAQ,SACRC,YAAa,UAuEVnB,EAAYlM,KAAK6C,IAAI,SAAC7C,GACrB,OACEjC,EAAAC,EAAAC,cAAA,KAAGkF,IAAKnD,EAAK6L,OACX9N,EAAAC,EAAAC,cAAA,cAAS+B,EAAK6L,MAAd,MACC7L,EAAKxC,WCtFL8P,GAVa,SAAAtR,GAAyB,IAAtBuR,EAAsBvR,EAAtBuR,gBAC7B,OACExP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+M,SAAA,KACEhN,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAQG,QAASqK,EAAiBpC,QAAQ,WAA1C,oBCsISqC,GA5HH,WACVpR,QAAQC,IAAI,2BADI,IAAAE,EAEkBC,mBAAS,CACzCmI,SAAU,KACV8I,QAAS,KACT3H,SAAU,KACVlB,WAAW,IANGnI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAETqE,EAFSnE,EAAA,GAEEiR,EAFFjR,EAAA,GAAAkN,EASsBnN,mBAAS,CAC7C4M,WAAY,KACZC,SAAU,OAXIO,EAAAlN,OAAAC,EAAA,EAAAD,CAAAiN,EAAA,GAST9I,EATS+I,EAAA,GASI+D,EATJ/D,EAAA,GAAAgE,EAcsCpR,oBAAS,GAd/CqR,EAAAnR,OAAAC,EAAA,EAAAD,CAAAkR,EAAA,GAcTE,EAdSD,EAAA,GAcYE,EAdZF,EAAA,YAAAG,IAAA,OAAAA,EAAAtR,OAAAyN,EAAA,EAAAzN,CAAAoI,EAAA9G,EAAAoM,KA2ChB,SAAAxE,IAAA,IAAAqI,EAAAC,EAAAvJ,EAAAmB,EAAA2H,EAAA,OAAA3I,EAAA9G,EAAA+G,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAC8CS,EAAc+H,GAD5D,OAAAO,EAAAlI,EAAAT,KAAA4I,EAAAxR,OAAAC,EAAA,EAAAD,CAAAuR,EAAA,GACStJ,EADTuJ,EAAA,GACmBpI,EADnBoI,EAAA,GAC6BT,EAD7BS,EAAA,GAEER,EAAa,CAAE/I,WAAUmB,WAAU2H,UAAS7I,WAAW,IAFzD,wBAAAmB,EAAAL,SAAAE,OA3CgBoE,MAAAC,KAAAzC,WAgBhBlF,oBAAU,WACRlG,QAAQC,IAAI,iCADE,IAENsI,EAAaQ,OAAbR,SACFmB,ER5BV,SAA6BnB,GAC3B,OAAO,IAAIqB,IAAOC,UAAUC,aAAavB,GQ2BtBwJ,CAAoBxJ,GAHvB,SAAAyJ,IAAA,OAAAA,EAAA1R,OAAAyN,EAAA,EAAAzN,CAAAoI,EAAA9G,EAAAoM,KAId,SAAA3F,IAAA,OAAAK,EAAA9G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAQ,OAAA,SACShB,KADT,wBAAAQ,EAAAU,SAAAjB,OAJcuF,MAAAC,KAAAzC,YAAA,kBAAA4G,EAAApE,MAAAC,KAAAzC,YAOd6G,GAAgBrB,KAAK,SAACsB,GAAa,IACzB1J,EAAwB0J,EAAxB1J,UAAWC,EAAayJ,EAAbzJ,SACnB,IAAKD,EAMH,OALAxI,QAAQ+D,KAAK,8BACbD,QAAMC,KAAK,wBAAyB,CAClCC,SAAUF,QAAMG,SAASC,UACzBC,UAAW,MAIf,IAAMkN,EAAU7I,EAAYC,EAAS,GAAK,KAC1C6I,EAAa,CACX/I,WACAmB,WACA2H,UACA7I,iBAGH,IAiBH,IAKMnH,EAAS,CACb8Q,WAAY,CACVC,YAAa,UAEf5J,UAAW,CACT6J,UAAW,WAIf,OACE1Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKyQ,IAAKC,IAAMzQ,UAAU,WAAW0Q,IAAI,SACzC7Q,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBAEFH,EAAAC,EAAAC,cAAC4Q,EAAA,eAAD,MACA9Q,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACLsC,EAAUgE,UAGV7G,EAAAC,EAAAC,cAAA,OAAKO,MAAOf,EAAOmH,WAChB,IADH,qBAEqBhE,EAAU6M,QAAQqB,MAAM,EAAG,GAFhD,MAGGlO,EAAU6M,QAAQqB,OAAO,IAL5B/Q,EAAAC,EAAAC,cAAC8Q,GAAD,CAAqBxB,gBApFf,kBAAAS,EAAAhE,MAAAC,KAAAzC,cA2FL,MAGPzJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGE,MAAOf,EAAO8Q,YACxBxQ,EAAAC,EAAAC,cAAC+Q,EAAD,CACE/S,SAlDV,SAA4BgT,EAAUC,GACpC,IAAMC,EAAoBF,IAAapO,EAAYuI,WAC7CgG,EAAkBF,IAAWrO,EAAYwI,UAC3C8F,GAAqBC,IACvBrB,GAAuB,GAGzBJ,EAAe,CAAEvE,WAAY6F,EAAU5F,SAAU6F,KA4CzC/S,cAAe2R,KAGnB/P,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KAEXP,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACTP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACPP,EAAAC,EAAAC,cAAC0C,EAAD,CACEC,UAAWA,EACXC,YAAaA,EACbZ,kBAAmB,kBAAM8N,GAAuB,OAGpDhQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,KAEXP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaM,MAAO,CAAEZ,UAAW,SACjDG,EAAAC,EAAAC,cAACoR,EAAD,CAAY3D,QA3DP,uHChEP4D,GAAc/J,QACW,cAA7BJ,OAAOoK,SAASC,UAEe,UAA7BrK,OAAOoK,SAASC,UAEhBrK,OAAOoK,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3C,KAAK,SAAA+C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpQ,QACf+P,UAAUC,cAAcO,WAK1BhU,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBgU,MAAM,SAAAzT,GACLR,QAAQQ,MAAM,4CAA6CA,KCzEjE0T,IAASC,OAAOxS,EAAAC,EAAAC,cAACuS,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,sBAAwBzL,OAAOoK,UAC3CsB,SAAW1L,OAAOoK,SAASsB,OAIvC,OAGF1L,OAAO2L,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAjP,OAAMkQ,sBAAN,sBAEPtB,IAiDV,SAAiCK,GAE/BoB,MAAMpB,GACH3C,KAAK,SAAAsB,GAGkB,MAApBA,EAASvO,SACuD,IAAhEuO,EAASjL,QAAQ2N,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMlE,KAAK,SAAA+C,GACjCA,EAAaoB,aAAanE,KAAK,WAC7B7H,OAAOoK,SAAS6B,aAKpB1B,GAAgBC,KAGnBU,MAAM,WACLjU,QAAQC,IACN,mEArEAgV,CAAwB1B,GAIxBC,UAAUC,cAAcqB,MAAMlE,KAAK,WACjC5Q,QAAQC,IACN,+GAMJqT,GAAgBC,MCzCxB2B","file":"static/js/main.ace43a60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass-icon.27e342e7.png\";","import React, { useState, useRef } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nconst BlockInput = ({ onSubmit, fetchDisabled = false }) => {\n  console.log(\"BlockInput component -- render\");\n  const NUMBERS_PATTERN = /^[0-9\\b]+$/;\n  const [error, setError] = useState(null);\n  const startRef = useRef();\n  const endRef = useRef();\n\n  const numbersOnly = (val) =>\n    !val || NUMBERS_PATTERN.test(val) ? null : \"Numbers only\";\n\n  function onStartBlockChange(e) {\n    setError(numbersOnly(e.target.value));\n  }\n\n  function onEndBlockChange(e) {\n    if (e.target.value !== null) {\n      setError(numbersOnly(e.target.value));\n    }\n  }\n\n  function handleSubmit(e) {\n    onSubmit(parseInt(startRef.current.value), parseInt(endRef.current.value));\n  }\n\n  const styles = {\n    fetchData: {\n      marginBottom: \"10px\",\n      marginTop: \"10px\",\n    },\n\n    requiredField: { color: \"red\" },\n  };\n\n  return (\n    <form\n      className=\"mb-3\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit(e);\n      }}\n    >\n      <Row>\n        <Col md={12}>\n          <label htmlFor=\"start-block-input\" className=\"float-left text-muted\">\n            <b>Start Block</b> <b style={styles.requiredFieldStyle}>*</b>\n          </label>\n          <input\n            id=\"start-block-input\"\n            ref={startRef}\n            type=\"number\"\n            onChange={onStartBlockChange}\n            className=\"form-control form-control-lg\"\n            placeholder=\"10305800\"\n            required\n            disabled={false}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={12}>\n          <label htmlFor=\"end-block-input\" className=\"float-left text-muted\">\n            <b>End Block (Optional)</b>\n          </label>\n          <input\n            id=\"end-block-input\"\n            ref={endRef}\n            type=\"number\"\n            onChange={onEndBlockChange}\n            className=\"form-control form-control-lg\"\n            placeholder=\"10305827\"\n            required={false}\n            disabled={false}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <div role=\"alert\" style={styles.requiredField}>\n          {error}\n        </div>\n      </Row>\n\n      <button\n        type=\"submit\"\n        disabled={fetchDisabled}\n        style={styles.fetchData}\n        className=\"btn btn-primary btn-block btn-lg\"\n      >\n        Fetch Data!\n      </button>\n    </form>\n  );\n};\n\nexport default BlockInput;\n","const Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n  FILTERED: \"filtered\",\n};\n\nexport default Status;\n","import React, { useReducer } from \"react\";\nimport { TransactionsTable } from \"../\";\nimport { TotalsPanel } from \"../\";\nimport { toast } from \"react-toastify\";\n\nimport Status from \"../../global/Status\";\n\nexport const TransactionContext = React.createContext();\n\nfunction transactionReducer(state, action) {\n  console.log(\"TxContextProvider --- TxReducer --- render\");\n  switch (action.type) {\n    case Status.IDLE: {\n      console.log(\"TxContextProvider --- TxReducer --- status: idle\");\n      return {\n        status: Status.IDLE,\n        data: null,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.PENDING: {\n      console.log(\"TxContextProvider --- TxReducer --- status: pending\");\n      toast.warn(\"Loading all data. This could take a few minutes.\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        status: Status.PENDING,\n        data: null,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.RESOLVED: {\n      console.log(\"TxContextProvider --- TxReducer --- status: resolved\");\n      toast.success(\"Data successfully loaded.\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        status: Status.RESOLVED,\n        data: action.data,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.REJECTED: {\n      console.log(\n        \"TxContextProvider --- TxReducer --- status: rejected\",\n        action.error\n      );\n      toast.error(\"Failed to fetch: \" + action.error, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 10000,\n      });\n      return {\n        status: Status.REJECTED,\n        data: null,\n        error: action.error,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    case Status.FILTERED: {\n      return {\n        status: Status.FILTERED,\n        data: action.data,\n        error: null,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    default: {\n      console.log(\"TxContextProvider --- TxReducer --- should not occur\");\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nexport function TransactionContextProvider({\n  web3State,\n  blockInputs,\n  endStatusCallback,\n}) {\n  const [transactionState, dispatch] = useReducer(transactionReducer, {\n    data: [],\n    status: Status.IDLE,\n    endStatusCallback: endStatusCallback,\n  });\n\n  return (\n    <TransactionContext.Provider value={[transactionState, dispatch]}>\n      <TotalsPanel web3State={web3State} />\n      <TransactionsTable\n        web3State={web3State}\n        blockInputs={blockInputs}\n        endStatusCallback={endStatusCallback}\n      />\n    </TransactionContext.Provider>\n  );\n}\n","const TableFilter = {\n  SENDER: {\n    text: \"Totals by Sender\",\n    value: \"from\",\n  },\n  RECIPIENT: {\n    text: \"Totals by Recipient\",\n    value: \"to\",\n  },\n};\n\nexport default TableFilter;\n","import React, { useEffect, useRef } from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport TableFilter from \"../../global/TableFilter\";\n\nconst { SENDER, RECIPIENT } = TableFilter;\n\nconst TableFilterComponent = ({ toggleCallback }) => {\n  const filters = [SENDER, RECIPIENT];\n  const filterGroup = useRef();\n  useEffect(() => {\n    if (!filterGroup) {\n      return;\n    }\n    setDefaultFilterSelection(filterGroup);\n  }, [filterGroup]);\n\n  function setDefaultFilterSelection(filterGroupElement) {\n    const recipientFilter = filterGroupElement.current.children[1];\n    recipientFilter.classList.toggle(\"btn-primary\");\n  }\n  function toggleFilterClasses(target) {\n    if (target.classList.contains(\"btn-primary\")) {\n      // button has already been selected - do nothing\n      return;\n    }\n    target.classList.toggle(\"btn-primary\");\n    const sibling = getSibling(target);\n    sibling.classList.toggle(\"btn-primary\");\n  }\n\n  function getSibling(element) {\n    return element.nextSibling ? element.nextSibling : element.previousSibling;\n  }\n\n  function toggleFilter(element) {\n    const target = element.target;\n    toggleFilterClasses(target);\n    toggleCallback(target.value);\n  }\n\n  return (\n    <ButtonGroup\n      style={{ paddingTop: \"10px\", paddingBottom: \"20px\" }}\n      justified=\"true\"\n      size=\"lg\"\n      className=\"mb-2\"\n      ref={filterGroup}\n    >\n      {filters.map((filter) => (\n        <Button\n          id={filter.value}\n          style={{ height: \"35px\", fontSize: \"inherit\" }}\n          onClick={toggleFilter}\n          value={filter.value}\n          key={filter.value}\n        >\n          {filter.text}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n};\n\nexport default TableFilterComponent;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst TableDisplay = ({ headers, data = [] }) => {\n  console.log(\"TableDisplay component ---- render\");\n  const tableStyles = {\n    maxHeight: \"400px\",\n    overflowY: \"scroll\",\n    marginBottom: \"20px\",\n  };\n  const dataStyles = {\n    resultsRow: {\n      textAlign: \"left\",\n    },\n  };\n  const tableContent = () => {\n    return data.length === 0 ? (\n      <strong>No Records Found.</strong>\n    ) : (\n      <div>\n        <Table striped bordered condensed=\"true\" hover style={tableStyles}>\n          <thead>\n            <tr>\n              {headers.value.map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((item) => (\n              <tr\n                key={`row-${item.hash}`}\n                className=\"tableRow\"\n                style={dataStyles.resultsRow}\n              >\n                <td>{item.address}</td>\n                <td>{item.value.toString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  };\n  return tableContent();\n};\n\nexport default TableDisplay;\n","import { ethers } from \"ethers\";\n\nfunction toEther(wei) {\n  return ethers.utils.formatEther(wei, \"Ether\");\n}\n\nfunction getEthereumProvider(ethereum) {\n  return new ethers.providers.Web3Provider(ethereum);\n}\nfunction getSigner(provider) {\n  const signer = provider.getSigner();\n  return [provider, signer];\n}\n\nasync function walletIsConnected() {\n  try {\n    const { ethereum } = window;\n    let connected;\n    if (!ethereum) {\n      console.warn(\"make sure you have metamask\");\n      connected = false;\n    } else {\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\n      connected = Boolean(accounts.length > 0);\n      return { connected, accounts };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function connectWallet() {\n  try {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.warn(\"you need metamask\");\n      return;\n    }\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    return [ethereum, provider, accounts[0]];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n *\n * @param {number} start start block number\n * @param {number} end end block number\n * @returns range from start to end values\n */\nfunction createRange(start, end) {\n  return Array.from(Array(end - start + 1).keys()).map((x) => x + start);\n}\n\nfunction getBlockRange(start, end) {\n  return createRange(parseInt(start), parseInt(end));\n}\n\nasync function getBlocks(start, end, web3State) {\n  const { provider } = web3State;\n  if (!end || end === \"0\") {\n    end = await provider.getBlockNumber();\n    console.log(`using latest block number: ${end}`);\n  }\n  const promises = [];\n  const blockRange = getBlockRange(start, end);\n  blockRange.forEach((blockNum) => {\n    promises.push(provider.getBlock(blockNum));\n  });\n  return Promise.all(promises);\n}\n\nfunction getTxHashesFromBlocks(blocks) {\n  let hashes = [];\n  blocks.forEach((blockResponse) => {\n    if (blockResponse && blockResponse.transactions) {\n      hashes = [...hashes, ...blockResponse.transactions];\n    }\n  });\n\n  return hashes;\n}\n\nfunction getTransactionsFromBlocks(blocks = [], web3State) {\n  const { provider } = web3State;\n  if (!provider) {\n    console.error(\"no provider found - check metamask connection.\");\n    return;\n  }\n  const hashes = getTxHashesFromBlocks(blocks);\n  const promises = [];\n\n  hashes.forEach((hash) => {\n    promises.push(provider.getTransaction(hash));\n  });\n\n  return Promise.all(promises);\n}\n\nconst mapToSenderAddress = (tx) => tx.from;\nconst mapToRecipientAddress = (tx) => tx.to;\nconst isContractCode = (c) => c === \"0x\";\n\nfunction getFromAddresses(txList) {\n  return getMappedAddresses(txList, mapToSenderAddress);\n}\n\nfunction getToAddresses(txList) {\n  return getMappedAddresses(txList, mapToRecipientAddress);\n}\n\n/**\n *\n * @param {Array} txList the list of transactions\n * @param {function} mapFunction the map function\n * @returns mapped list of addresses\n */\nfunction getMappedAddresses(txList, mapFunction) {\n  let addresses;\n  if (txList && txList.constructor === Array) {\n    addresses = txList.map(mapFunction).filter((addr) => !!addr);\n  } else {\n    addresses = [];\n  }\n  return addresses;\n}\n\n/**\n *\n * @param {Array} addresses\n * for each address, check the code to see if its a contract\n * @returns codes\n */\nasync function getAddressCodes(addresses, web3State) {\n  const { provider } = web3State;\n  const codePromises = [];\n  addresses.forEach((address) => {\n    codePromises.push(provider.getCode(address));\n  });\n\n  return Promise.all(codePromises);\n}\n\nexport {\n  getEthereumProvider,\n  getSigner,\n  connectWallet,\n  getBlocks,\n  walletIsConnected,\n  getTransactionsFromBlocks,\n  getAddressCodes,\n  isContractCode,\n  getFromAddresses,\n  getToAddresses,\n  toEther,\n};\n","const TableHeaders = {\n  SENDER_HEADERS: {\n    id: \"SENDER\",\n    value: [\"Sender Address\", \"Total Sent (Wei)\"],\n  },\n  RECIPIENT_HEADERS: {\n    id: \"RECIPIENT\",\n    value: [\"Recipient Address\", \"Total Received (Wei)\"],\n  },\n};\n\nexport default TableHeaders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { TransactionContext } from \"../Context/TransactionContextProvider\";\nimport { TableFilterComponent, TableDisplay } from \"./\";\nimport {\n  getBlocks,\n  getTransactionsFromBlocks,\n} from \"../../utils/ethereumUtils\";\nimport { groupTransactions } from \"../../utils/transactionUtils\";\nimport Status from \"../../global/Status\";\nimport TableFilter from \"../../global/TableFilter\";\nimport TableHeaders from \"../../global/TableHeaders\";\n\nconst { SENDER, RECIPIENT } = TableFilter;\nconst { SENDER_HEADERS, RECIPIENT_HEADERS } = TableHeaders;\n\nfunction TableIfExists(transactionState, tableState) {\n  const loader = (\n    <Button variant=\"link\" id=\"loader\" className=\"text-center\">\n      Loading...\n    </Button>\n  );\n  const tableStyle = { maxHeight: \"400px\", overflowY: \"scroll\" };\n  switch (transactionState.status) {\n    case Status.IDLE:\n      return <div>*** Submit a block range ***</div>;\n    case Status.PENDING:\n      return loader;\n    case Status.REJECTED:\n      throw new Error(\"promise rejected\");\n    case Status.RESOLVED:\n      const { data, headers } = tableState;\n      const noRecordsFound = transactionState.data.length === 0;\n      const recordsNotRenderedYet =\n        transactionState.data.length > 0 && data.length === 0;\n      let display;\n      if (noRecordsFound) {\n        display = <div>No Records Found.</div>;\n      } else if (recordsNotRenderedYet) {\n        display = loader;\n      } else {\n        display = (\n          <div style={tableStyle}>\n            <TableDisplay headers={headers} data={data} />\n          </div>\n        );\n      }\n      return display;\n    case Status.FILTERED: {\n      return (\n        <div style={tableStyle}>\n          <TableDisplay headers={headers} data={data} />\n        </div>\n      );\n    }\n    default:\n      throw new Error(\"This should be impossible\");\n  }\n}\n\nconst TransactionsTable = ({ web3State, blockInputs }) => {\n  console.log(\"TransactionTable component ---- render\");\n  const { startBlock, endBlock } = blockInputs;\n  const [transactionState, dispatch] = useContext(TransactionContext);\n  const [selectedFilter, setSelectedFilter] = useState(SENDER);\n  const [tableState, setTableState] = useState({\n    data: [],\n    headers: SENDER_HEADERS,\n  });\n\n  /**\n   * Re-load transaction data anytime a new start or end block is submitted\n   */\n  useEffect(() => {\n    console.log(\n      \"TransactionsTable useEffect(startBlock, endBlock) --- render --- status: \",\n      transactionState.status\n    );\n\n    if (!startBlock || !selectedFilter) {\n      console.log(\n        \"TransactionsTable useEffect(startBlock, endBlock) -- base case\"\n      );\n\n      return;\n    }\n    async function loadTransactionData() {\n      dispatch({\n        type: Status.PENDING,\n      });\n\n      const blocks = await getBlocks(startBlock, endBlock, web3State);\n      const transactions = await getTransactionsFromBlocks(blocks, web3State);\n      dispatch({\n        data: transactions,\n        type: Status.RESOLVED,\n      });\n    }\n\n    loadTransactionData();\n    return () => {\n      console.log(\n        \"TransactionsTable --- useEffect(startBlock, endBlock) ---- cleanup\"\n      );\n    };\n  }, [startBlock, endBlock]);\n\n  useEffect(() => {\n    console.log(\n      \"TransactionsTable --- useEffect(txData, selectedFilter) --- render\"\n    );\n    if (!selectedFilter || transactionState.status !== Status.RESOLVED) {\n      console.log(\n        \"TransactionsTable --- useEffect(txData, selectedFilter) -- base case \"\n      );\n      return;\n    }\n\n    const groupedTransactions = groupAndFilterTransactions(\n      transactionState.data,\n      selectedFilter.value\n    );\n    const headers = getHeaders(selectedFilter.value);\n    setTableState({\n      data: groupedTransactions,\n      headers,\n    });\n  }, [transactionState.data, selectedFilter]);\n\n  useEffect(() => {\n    console.log(\"TransactionTable useEffect(status) --- render\");\n    if (transactionState.status === Status.RESOLVED) {\n      transactionState.endStatusCallback();\n    }\n  }, [transactionState.status]);\n\n  function groupAndFilterTransactions(data, selectedFilter) {\n    const groupedTransactions = groupTransactions(data, selectedFilter).filter(\n      (tx) => !!tx.address\n    );\n    return groupedTransactions;\n  }\n\n  function getHeaders(selectedFilter) {\n    return selectedFilter === SENDER.value ? SENDER_HEADERS : RECIPIENT_HEADERS;\n  }\n\n  function handleFilterToggle(newFilter) {\n    setSelectedFilter(newFilter === SENDER.value ? SENDER : RECIPIENT);\n  }\n\n  return (\n    <>\n      {transactionState.status === Status.RESOLVED && (\n        <TableFilterComponent toggleCallback={handleFilterToggle} />\n      )}\n      {TableIfExists(transactionState, tableState)}\n    </>\n  );\n};\n\nexport default TransactionsTable;\n","import { BigNumber } from \"ethers\";\n\n/**\n *\n * @param {Array} txArray list of transactions\n * @param {string} groupByKey the groupBy key\n * @returns a list of transaction totals, grouped by the groupByKey\n */\nfunction groupTransactions(txArray, groupByKey) {\n  const totals = [];\n  txArray.reduce((results, tx) => {\n    if (!results[groupByKey]) {\n      results[tx[groupByKey]] = {\n        value: BigNumber.from(\"0\"),\n      };\n      // set the correct groupBy key\n      results[tx[groupByKey]][\"address\"] = tx[groupByKey];\n      //set a hash to act as a key\n      results[tx[groupByKey]][\"hash\"] = tx[\"hash\"];\n      totals.push(results[tx[groupByKey]]);\n    }\n    results[tx[groupByKey]].value = results[tx[groupByKey]].value.add(tx.value);\n    return results;\n  }, {});\n  return totals;\n}\n\nexport { groupTransactions };\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Disclaimer = ({ message }) => {\n  return (\n    <Row className=\"centeralign\">\n      <div className=\"h3\">Disclaimer</div>\n      <Row>\n        <p>{message}</p>\n      </Row>\n    </Row>\n  );\n};\n\nexport default Disclaimer;\n","const Totals = {\n  TOTAL_ETH_MOVED: {\n    label: \"Total Ether transferred (ETH)\",\n  },\n  TOTAL_NUM_TRANSACTIONS: {\n    label: \"Total # transactions\",\n  },\n  TOTAL_NUM_CONTRACT_ADDRESSES: {\n    label: \"Total # contract addresses\",\n  },\n};\n\nexport default Totals;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { TransactionContext } from \"../Context/TransactionContextProvider\";\nimport {\n  getFromAddresses,\n  getToAddresses,\n  getAddressCodes,\n  isContractCode,\n  toEther,\n} from \"../../utils/ethereumUtils\";\nimport { BigNumber } from \"ethers\";\nimport Totals from \"../../global/Totals\";\n\nconst TotalsPanel = ({ web3State }) => {\n  const [transactionState] = useContext(TransactionContext);\n  const [displayData, setDisplayData] = useState({\n    data: [],\n    totalsLoaded: false,\n  });\n\n  const styles = {\n    border: {\n      borderColor: \"darkblue\",\n      border: \"double\",\n      borderWidth: \"thick\",\n    },\n  };\n\n  useEffect(() => {\n    console.log(\n      \"TotalsPanel component --- useEffect(transactionState) --- render\"\n    );\n    if (!transactionState.data || transactionState.data.length === 0) {\n      console.log(\n        \"TotalsPanel component --- useEffect(transactionState) --- base case\"\n      );\n      return;\n    }\n\n    const totalNumTransactions = transactionState.data.length;\n    const totalEthTransferred = getTotalEthTransferred();\n\n    getTotalNumContractAddresses().then((codes) => {\n      const contractAddresses = codes.filter(isContractCode);\n      const totalNumContractAddresses = contractAddresses.length;\n      setDisplayData({\n        data: [\n          {\n            label: Totals.TOTAL_ETH_MOVED.label,\n            value: totalEthTransferred,\n          },\n          {\n            label: Totals.TOTAL_NUM_TRANSACTIONS.label,\n            value: totalNumTransactions,\n          },\n          {\n            label: Totals.TOTAL_NUM_CONTRACT_ADDRESSES.label,\n            value: totalNumContractAddresses,\n          },\n        ],\n        totalsLoaded: true,\n      });\n    });\n\n    return () => {\n      console.log(\"TotalsPanel --- useEffect(transactionState) --- cleanup\");\n      setDisplayData({ totalsLoaded: false });\n    };\n  }, [transactionState]);\n\n  function getTotalEthTransferred() {\n    const { data } = transactionState;\n    const values = data.map((d) => d.value);\n    const totalEthMoved =\n      values.length > 0\n        ? values.reduce((a, b) => a.add(b))\n        : BigNumber.from(\"0\");\n\n    const wei = totalEthMoved.toString();\n    const eth = toEther(wei);\n    return eth;\n  }\n\n  function getTotalNumContractAddresses() {\n    const { data } = transactionState;\n    const fromAddresses = getFromAddresses(data);\n    const toAddresses = getToAddresses(data);\n    const addresses = [...fromAddresses, ...toAddresses];\n\n    return getAddressCodes(addresses, web3State);\n  }\n\n  return (\n    displayData.totalsLoaded && (\n      <div style={styles.border}>\n        {displayData.data.map((data) => {\n          return (\n            <p key={data.label}>\n              <strong>{data.label}: </strong>\n              {data.value}\n            </p>\n          );\n        })}\n      </div>\n    )\n  );\n};\n\nexport default TotalsPanel;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nconst ConnectWalletButton = ({ connectWalletCb }) => {\n  return (\n    <>\n      <Button onClick={connectWalletCb} variant=\"primary\">\n        Connect Wallet\n      </Button>\n    </>\n  );\n};\n\nexport default ConnectWalletButton;\n","import React, { useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport logo from \"./images/magnifying-glass-icon.png\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { TransactionContextProvider } from \"./components/\";\nimport { BlockInput, Disclaimer, ConnectWalletButton } from \"./components\";\nimport {\n  connectWallet,\n  getEthereumProvider,\n  walletIsConnected,\n} from \"./utils/ethereumUtils\";\n\nconst App = () => {\n  console.log(\"App component -- render\");\n  const [web3State, setWeb3State] = useState({\n    ethereum: null,\n    account: null,\n    provider: null,\n    connected: false,\n  });\n\n  const [blockInputs, setBlockInputs] = useState({\n    startBlock: null,\n    endBlock: null,\n  });\n\n  const [blockInputsDisabled, setBlockInputsDisabled] = useState(false);\n\n  useEffect(() => {\n    console.log(\"App --- useEffect() -- render\");\n    const { ethereum } = window;\n    const provider = getEthereumProvider(ethereum);\n    async function loadWeb3State() {\n      return walletIsConnected();\n    }\n    loadWeb3State().then((response) => {\n      const { connected, accounts } = response;\n      if (!connected) {\n        console.warn(\"Metamask not detected\");\n        toast.warn(\"Metamask not detected\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000,\n        });\n        return;\n      }\n      const account = connected ? accounts[0] : null;\n      setWeb3State({\n        ethereum,\n        provider,\n        account,\n        connected,\n      });\n    });\n  }, []);\n\n  async function handleConnectWallet() {\n    const [ethereum, provider, account] = await connectWallet(setWeb3State);\n    setWeb3State({ ethereum, provider, account, connected: true });\n  }\n\n  function onBlockInputSubmit(newStart, newEnd) {\n    const startBlockChanged = newStart !== blockInputs.startBlock;\n    const endBlockChanged = newEnd !== blockInputs.endBlock;\n    if (startBlockChanged || endBlockChanged) {\n      setBlockInputsDisabled(true);\n    }\n\n    setBlockInputs({ startBlock: newStart, endBlock: newEnd });\n  }\n\n  const disclaimerMessage = () => {\n    const msg = `In order for this app to work successfully, you must have a Metamask or Web3 provider\n          account setup.`;\n    return msg;\n  };\n  const styles = {\n    blockInput: {\n      borderStyle: \"outset\",\n    },\n    connected: {\n      fontStyle: \"italic\",\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Ether Cash Flow</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">Block Explorer</h1>\n      </header>\n      <ToastContainer />\n      <Row>\n        <Col md={10} />\n        <Col md={2}>\n          {!web3State.connected ? (\n            <ConnectWalletButton connectWalletCb={handleConnectWallet} />\n          ) : (\n            <div style={styles.connected}>\n              {\" \"}\n              Wallet Connected: {web3State.account.slice(0, 3)}...\n              {web3State.account.slice(-3)}\n            </div>\n          )}{\" \"}\n        </Col>\n      </Row>\n      <Row>\n        <Col md={2} />\n        <Col md={8} style={styles.blockInput}>\n          <BlockInput\n            onSubmit={onBlockInputSubmit}\n            fetchDisabled={blockInputsDisabled}\n          />\n        </Col>\n        <Col md={2} />\n      </Row>\n      <br />\n\n      <Row>\n        <Col md={2} />\n        <Col md={8}>\n          <TransactionContextProvider\n            web3State={web3State}\n            blockInputs={blockInputs}\n            endStatusCallback={() => setBlockInputsDisabled(false)}\n          />\n        </Col>\n        <Col md={2} />\n      </Row>\n      <footer className=\"App-footer\" style={{ marginTop: \"20px\" }}>\n        <Disclaimer message={disclaimerMessage()} />\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}